<svg xmlns="http://www.w3.org/2000/svg" xmlns:fg="http://github.com/jonhoo/inferno" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="694" onload="init(evt)" version="1.1" viewBox="0 0 1200 694"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:monospace; font-size:12px } #title { text-anchor:middle; font-size:17px; } #matched { text-anchor:end; } #search { text-anchor:end; opacity:0.1; cursor:pointer; } #search:hover, #search.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect width="100%" height="694" x="0" y="0" fill="url(#background)"/><text id="title" x="50%" y="24" fill="#000">Flame Graph</text><text id="unzoom" x="10" y="24" fill="#000" class="hide">Reset Zoom</text><text id="search" x="1190" y="24" fill="#000">Search</text><svg id="frames" width="1180" x="10" total_samples="85146"><g><title>datafusion-cli`&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect width=".019%" height="15" x="0%" y="533" fill="#E30007" fg:w="16" fg:x="0"/></g><g><title>datafusion-cli`datafusion_cli::main_inner::_{{closure}} (91 samples, 0.11%)</title><rect width=".107%" height="15" x=".019%" y="533" fill="#D90018" fg:w="91" fg:x="16"/></g><g><title>datafusion-cli`&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (69 samples, 0.08%)</title><rect width=".081%" height="15" x=".251%" y="517" fill="#DDC136" fg:w="69" fg:x="214"/></g><g><title>datafusion-cli`datafusion_cli::exec::exec_from_files::_{{closure}} (19 samples, 0.02%)</title><rect width=".022%" height="15" x=".332%" y="517" fill="#F8D406" fg:w="19" fg:x="283"/></g><g><title>datafusion-cli`datafusion_cli::exec::exec_and_print::_{{closure}} (101 samples, 0.12%)</title><rect width=".119%" height="15" x=".563%" y="485" fill="#D04423" fg:w="101" fg:x="479"/></g><g><title>datafusion-cli`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (66 samples, 0.08%)</title><rect width=".077%" height="15" x=".79%" y="469" fill="#E88000" fg:w="66" fg:x="673"/></g><g><title>datafusion-cli`&lt;parquet::format::FileMetaData as parquet::thrift::TSerializable&gt;::read_from_in_protocol (13 samples, 0.02%)</title><rect width=".015%" height="15" x="1.055%" y="213" fill="#CFA02F" fg:w="13" fg:x="898"/></g><g><title>datafusion-cli`&lt;parquet::format::ColumnChunk as parquet::thrift::TSerializable&gt;::read_from_in_protocol (13 samples, 0.02%)</title><rect width=".015%" height="15" x="1.055%" y="197" fill="#E41722" fg:w="13" fg:x="898"/></g><g><title>datafusion-cli`datafusion::datasource::file_format::parquet::fetch_parquet_metadata::_{{closure}} (19 samples, 0.02%)</title><rect width=".022%" height="15" x="1.052%" y="245" fill="#DA1E1A" fg:w="19" fg:x="896"/></g><g><title>datafusion-cli`parquet::file::footer::decode_metadata (17 samples, 0.02%)</title><rect width=".02%" height="15" x="1.055%" y="229" fill="#DC7A13" fg:w="17" fg:x="898"/></g><g><title>datafusion-cli`&lt;datafusion::datasource::listing::table::ListingTable as datafusion_catalog::table::TableProvider&gt;::scan::_{{closure}} (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="341" fill="#FAE42A" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::stream::buffered::Buffered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="325" fill="#F0C11C" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="309" fill="#D81425" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="293" fill="#CEBC27" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="277" fill="#D9CF0D" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;datafusion::datasource::file_format::parquet::ParquetFormat as datafusion::datasource::file_format::FileFormat&gt;::infer_stats::_{{closure}} (23 samples, 0.03%)</title><rect width=".027%" height="15" x="1.052%" y="261" fill="#E74926" fg:w="23" fg:x="896"/></g><g><title>datafusion-cli`&lt;datafusion::execution::session_state::DefaultQueryPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::_{{closure}} (25 samples, 0.03%)</title><rect width=".029%" height="15" x="1.051%" y="453" fill="#E1142E" fg:w="25" fg:x="895"/></g><g><title>datafusion-cli`&lt;datafusion::physical_planner::DefaultPhysicalPlanner as datafusion::physical_planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (25 samples, 0.03%)</title><rect width=".029%" height="15" x="1.051%" y="437" fill="#D21F29" fg:w="25" fg:x="895"/></g><g><title>datafusion-cli`datafusion::physical_planner::DefaultPhysicalPlanner::create_initial_plan::_{{closure}} (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.052%" y="421" fill="#DDC82F" fg:w="24" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.052%" y="405" fill="#E21A05" fg:w="24" fg:x="896"/></g><g><title>datafusion-cli`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.052%" y="389" fill="#F9211A" fg:w="24" fg:x="896"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.052%" y="373" fill="#EBB71C" fg:w="24" fg:x="896"/></g><g><title>datafusion-cli`datafusion::physical_planner::DefaultPhysicalPlanner::map_logical_node_to_physical::_{{closure}} (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.052%" y="357" fill="#DD0526" fg:w="24" fg:x="896"/></g><g><title>datafusion-cli`&lt;parquet::format::ColumnChunk as parquet::thrift::TSerializable&gt;::read_from_in_protocol (20 samples, 0.02%)</title><rect width=".024%" height="15" x="1.083%" y="261" fill="#F7122A" fg:w="20" fg:x="922"/></g><g><title>datafusion-cli`&lt;parquet::format::FileMetaData as parquet::thrift::TSerializable&gt;::read_from_in_protocol (24 samples, 0.03%)</title><rect width=".028%" height="15" x="1.082%" y="277" fill="#F1832D" fg:w="24" fg:x="921"/></g><g><title>datafusion-cli`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (36 samples, 0.04%)</title><rect width=".042%" height="15" x="1.081%" y="373" fill="#F91F1D" fg:w="36" fg:x="920"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (36 samples, 0.04%)</title><rect width=".042%" height="15" x="1.081%" y="357" fill="#E16F35" fg:w="36" fg:x="920"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (36 samples, 0.04%)</title><rect width=".042%" height="15" x="1.081%" y="341" fill="#EEA011" fg:w="36" fg:x="920"/></g><g><title>datafusion-cli`&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.04%)</title><rect width=".042%" height="15" x="1.081%" y="325" fill="#D69430" fg:w="36" fg:x="920"/></g><g><title>datafusion-cli`datafusion::datasource::file_format::parquet::fetch_parquet_metadata::_{{closure}} (35 samples, 0.04%)</title><rect width=".041%" height="15" x="1.082%" y="309" fill="#E82431" fg:w="35" fg:x="921"/></g><g><title>datafusion-cli`parquet::file::footer::decode_metadata (35 samples, 0.04%)</title><rect width=".041%" height="15" x="1.082%" y="293" fill="#D16718" fg:w="35" fg:x="921"/></g><g><title>datafusion-cli`&lt;datafusion_cli::catalog::DynamicObjectStoreSchemaProvider as datafusion_catalog::schema::SchemaProvider&gt;::table::_{{closure}} (39 samples, 0.05%)</title><rect width=".046%" height="15" x="1.081%" y="453" fill="#E55808" fg:w="39" fg:x="920"/></g><g><title>datafusion-cli`&lt;datafusion_catalog::dynamic_file::catalog::DynamicFileSchemaProvider as datafusion_catalog::schema::SchemaProvider&gt;::table::_{{closure}} (39 samples, 0.05%)</title><rect width=".046%" height="15" x="1.081%" y="437" fill="#D5B513" fg:w="39" fg:x="920"/></g><g><title>datafusion-cli`&lt;datafusion::datasource::dynamic_file::DynamicListTableFactory as datafusion_catalog::dynamic_file::catalog::UrlTableFactory&gt;::try_new::_{{closure}} (39 samples, 0.05%)</title><rect width=".046%" height="15" x="1.081%" y="421" fill="#FEBF36" fg:w="39" fg:x="920"/></g><g><title>datafusion-cli`datafusion::datasource::listing::table::ListingOptions::infer_schema::_{{closure}} (39 samples, 0.05%)</title><rect width=".046%" height="15" x="1.081%" y="405" fill="#F15325" fg:w="39" fg:x="920"/></g><g><title>datafusion-cli`&lt;datafusion::datasource::file_format::parquet::ParquetFormat as datafusion::datasource::file_format::FileFormat&gt;::infer_schema::_{{closure}} (39 samples, 0.05%)</title><rect width=".046%" height="15" x="1.081%" y="389" fill="#E92427" fg:w="39" fg:x="920"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::sorts::merge::SortPreservingMergeStream&lt;C&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.07%)</title><rect width=".074%" height="15" x="1.126%" y="453" fill="#E20336" fg:w="63" fg:x="959"/></g><g><title>datafusion-cli`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (103 samples, 0.12%)</title><rect width=".121%" height="15" x="1.383%" y="437" fill="#F5C028" fg:w="103" fg:x="1178"/></g><g><title>datafusion-cli`mi_malloc_aligned (98 samples, 0.12%)</title><rect width=".115%" height="15" x="3.366%" y="405" fill="#EEA71D" fg:w="98" fg:x="2866"/></g><g><title>datafusion-cli`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,443 samples, 1.69%)</title><rect width="1.695%" height="15" x="1.853%" y="421" fill="#E8B633" fg:w="1443" fg:x="1578"/></g><g><title>libdyld.dylib`tlv_get_addr (57 samples, 0.07%)</title><rect width=".067%" height="15" x="3.481%" y="405" fill="#E73C27" fg:w="57" fg:x="2964"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::sorts::stream::FieldCursorStream&lt;T&gt; as datafusion_physical_plan::sorts::stream::PartitionedStream&gt;::poll_next (57 samples, 0.07%)</title><rect width=".067%" height="15" x="3.548%" y="421" fill="#D0450C" fg:w="57" fg:x="3021"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::stream::RecordBatchStreamAdapter&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (26 samples, 0.03%)</title><rect width=".03%" height="15" x="3.758%" y="389" fill="#EB5D25" fg:w="26" fg:x="3200"/></g><g><title>datafusion-cli`&lt;futures_util::stream::select_with_strategy::SelectWithStrategy&lt;St1,St2,Clos,State&gt; as futures_core::stream::Stream&gt;::poll_next (57 samples, 0.07%)</title><rect width=".067%" height="15" x="3.789%" y="389" fill="#D57427" fg:w="57" fg:x="3226"/></g><g><title>datafusion-cli`&lt;futures_util::stream::once::Once&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.07%)</title><rect width=".072%" height="15" x="4.18%" y="357" fill="#DECF1D" fg:w="61" fg:x="3559"/></g><g><title>datafusion-cli`tokio::task::join_set::JoinSet&lt;T&gt;::poll_join_next (212 samples, 0.25%)</title><rect width=".249%" height="15" x="4.519%" y="325" fill="#CE601E" fg:w="212" fg:x="3848"/></g><g><title>datafusion-cli`tokio::util::idle_notified_set::IdleNotifiedSet&lt;T&gt;::pop_notified (147 samples, 0.17%)</title><rect width=".173%" height="15" x="4.596%" y="309" fill="#DA8A04" fg:w="147" fg:x="3913"/></g><g><title>datafusion-cli`&lt;futures_util::stream::once::Once&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (361 samples, 0.42%)</title><rect width=".424%" height="15" x="4.387%" y="341" fill="#FABF0E" fg:w="361" fg:x="3735"/></g><g><title>datafusion-cli`tokio::util::idle_notified_set::IdleNotifiedSet&lt;T&gt;::pop_notified (36 samples, 0.04%)</title><rect width=".042%" height="15" x="4.768%" y="325" fill="#EF3C28" fg:w="36" fg:x="4060"/></g><g><title>datafusion-cli`&lt;futures_util::stream::stream::filter_map::FilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (511 samples, 0.60%)</title><rect width=".6%" height="15" x="4.252%" y="357" fill="#CE1B30" fg:w="511" fg:x="3620"/></g><g><title>datafusion-cli`tokio::task::join_set::JoinSet&lt;T&gt;::poll_join_next (35 samples, 0.04%)</title><rect width=".041%" height="15" x="4.811%" y="341" fill="#E12308" fg:w="35" fg:x="4096"/></g><g><title>datafusion-cli`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (88 samples, 0.10%)</title><rect width=".103%" height="15" x="5.038%" y="341" fill="#FAD518" fg:w="88" fg:x="4290"/></g><g><title>datafusion-cli`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (58 samples, 0.07%)</title><rect width=".068%" height="15" x="5.341%" y="325" fill="#F77B16" fg:w="58" fg:x="4548"/></g><g><title>datafusion-cli`tokio::runtime::park::clone (39 samples, 0.05%)</title><rect width=".046%" height="15" x="5.41%" y="325" fill="#E78A26" fg:w="39" fg:x="4606"/></g><g><title>datafusion-cli`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (276 samples, 0.32%)</title><rect width=".324%" height="15" x="5.455%" y="325" fill="#E7912E" fg:w="276" fg:x="4645"/></g><g><title>datafusion-cli`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (169 samples, 0.20%)</title><rect width=".199%" height="15" x="5.779%" y="325" fill="#FB760B" fg:w="169" fg:x="4921"/></g><g><title>datafusion-cli`tokio::runtime::park::drop_waker (36 samples, 0.04%)</title><rect width=".042%" height="15" x="5.936%" y="309" fill="#D99319" fg:w="36" fg:x="5054"/></g><g><title>datafusion-cli`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (780 samples, 0.92%)</title><rect width=".916%" height="15" x="5.142%" y="341" fill="#F75125" fg:w="780" fg:x="4378"/></g><g><title>libdyld.dylib`tlv_get_addr (68 samples, 0.08%)</title><rect width=".08%" height="15" x="5.978%" y="325" fill="#D10C26" fg:w="68" fg:x="5090"/></g><g><title>datafusion-cli`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (74 samples, 0.09%)</title><rect width=".087%" height="15" x="6.058%" y="341" fill="#E30109" fg:w="74" fg:x="5158"/></g><g><title>datafusion-cli`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (52 samples, 0.06%)</title><rect width=".061%" height="15" x="6.145%" y="341" fill="#F82F2B" fg:w="52" fg:x="5232"/></g><g><title>datafusion-cli`&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1,241 samples, 1.46%)</title><rect width="1.458%" height="15" x="4.852%" y="357" fill="#DD0A1E" fg:w="1241" fg:x="4131"/></g><g><title>libdyld.dylib`tlv_get_addr (88 samples, 0.10%)</title><rect width=".103%" height="15" x="6.206%" y="341" fill="#D2E501" fg:w="88" fg:x="5284"/></g><g><title>datafusion-cli`&lt;futures_util::stream::select_with_strategy::SelectWithStrategy&lt;St1,St2,Clos,State&gt; as futures_core::stream::Stream&gt;::poll_next (2,014 samples, 2.37%)</title><rect width="2.365%" height="15" x="3.981%" y="373" fill="#DE9425" fg:w="2014" fg:x="3390"/><text x="4.231%" y="383.5">da..</text></g><g><title>datafusion-cli`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (32 samples, 0.04%)</title><rect width=".038%" height="15" x="6.309%" y="357" fill="#EA4321" fg:w="32" fg:x="5372"/></g><g><title>datafusion-cli`&lt;futures_util::stream::stream::filter_map::FilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (90 samples, 0.11%)</title><rect width=".106%" height="15" x="6.347%" y="373" fill="#F76223" fg:w="90" fg:x="5404"/></g><g><title>datafusion-cli`&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.06%)</title><rect width=".055%" height="15" x="6.452%" y="373" fill="#F78A34" fg:w="47" fg:x="5494"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::sorts::stream::FieldCursorStream&lt;T&gt; as datafusion_physical_plan::sorts::stream::PartitionedStream&gt;::poll_next (2,396 samples, 2.81%)</title><rect width="2.814%" height="15" x="3.724%" y="405" fill="#D54F1E" fg:w="2396" fg:x="3171"/><text x="3.974%" y="415.5">da..</text></g><g><title>datafusion-cli`datafusion_physical_plan::sorts::stream::FusedStreams::poll_next (2,284 samples, 2.68%)</title><rect width="2.683%" height="15" x="3.856%" y="389" fill="#F6B117" fg:w="2284" fg:x="3283"/><text x="4.106%" y="399.5">da..</text></g><g><title>datafusion-cli`futures_util::stream::select::select::round_robin (26 samples, 0.03%)</title><rect width=".03%" height="15" x="6.508%" y="373" fill="#E63E1B" fg:w="26" fg:x="5541"/></g><g><title>datafusion-cli`datafusion_physical_plan::sorts::merge::SortPreservingMergeStream&lt;C&gt;::maybe_poll_stream (2,570 samples, 3.02%)</title><rect width="3.018%" height="15" x="3.615%" y="421" fill="#D89A08" fg:w="2570" fg:x="3078"/><text x="3.865%" y="431.5">dat..</text></g><g><title>datafusion-cli`datafusion_physical_plan::sorts::stream::FusedStreams::poll_next (81 samples, 0.10%)</title><rect width=".095%" height="15" x="6.538%" y="405" fill="#F4232D" fg:w="81" fg:x="5567"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::sorts::merge::SortPreservingMergeStream&lt;C&gt; as futures_core::stream::Stream&gt;::poll_next (4,392 samples, 5.16%)</title><rect width="5.158%" height="15" x="1.504%" y="437" fill="#FB730C" fg:w="4392" fg:x="1281"/><text x="1.754%" y="447.5">datafu..</text></g><g><title>datafusion-cli`tokio::runtime::park::wake_by_ref (25 samples, 0.03%)</title><rect width=".029%" height="15" x="6.633%" y="421" fill="#F03632" fg:w="25" fg:x="5648"/></g><g><title>datafusion-cli`datafusion_physical_plan::sorts::merge::SortPreservingMergeStream&lt;C&gt;::maybe_poll_stream (36 samples, 0.04%)</title><rect width=".042%" height="15" x="6.663%" y="437" fill="#E95434" fg:w="36" fg:x="5673"/></g><g><title>datafusion-cli`mi_free (86 samples, 0.10%)</title><rect width=".101%" height="15" x="6.705%" y="437" fill="#CF752F" fg:w="86" fg:x="5709"/></g><g><title>datafusion-cli`&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (4,796 samples, 5.63%)</title><rect width="5.633%" height="15" x="1.2%" y="453" fill="#F92B27" fg:w="4796" fg:x="1022"/><text x="1.45%" y="463.5">datafus..</text></g><g><title>datafusion-cli`tokio::runtime::park::wake_by_ref (23 samples, 0.03%)</title><rect width=".027%" height="15" x="6.806%" y="437" fill="#D1262C" fg:w="23" fg:x="5795"/></g><g><title>datafusion-cli`datafusion_cli::exec::exec_from_files::_{{closure}} (5,412 samples, 6.36%)</title><rect width="6.356%" height="15" x=".479%" y="501" fill="#ECD417" fg:w="5412" fg:x="408"/><text x=".729%" y="511.5">datafusi..</text></g><g><title>datafusion-cli`datafusion_cli::exec::exec_from_lines::_{{closure}} (5,240 samples, 6.15%)</title><rect width="6.154%" height="15" x=".681%" y="485" fill="#F24F15" fg:w="5240" fg:x="580"/><text x=".931%" y="495.5">datafusi..</text></g><g><title>datafusion-cli`datafusion_cli::exec::exec_and_print::_{{closure}} (5,081 samples, 5.97%)</title><rect width="5.967%" height="15" x=".868%" y="469" fill="#D36023" fg:w="5081" fg:x="739"/><text x="1.118%" y="479.5">datafusi..</text></g><g><title>datafusion-cli`datafusion_cli::main_inner::_{{closure}} (5,579 samples, 6.55%)</title><rect width="6.552%" height="15" x=".355%" y="517" fill="#FDD728" fg:w="5579" fg:x="302"/><text x=".605%" y="527.5">datafusio..</text></g><g><title>datafusion-cli`datafusion_cli::exec::exec_from_lines::_{{closure}} (61 samples, 0.07%)</title><rect width=".072%" height="15" x="6.835%" y="501" fill="#D35115" fg:w="61" fg:x="5820"/></g><g><title>datafusion-cli`tokio::runtime::park::CachedParkThread::park (39 samples, 0.05%)</title><rect width=".046%" height="15" x="6.907%" y="517" fill="#D0BE26" fg:w="39" fg:x="5881"/></g><g><title>datafusion-cli`tokio::runtime::park::Inner::park (62 samples, 0.07%)</title><rect width=".073%" height="15" x="6.953%" y="517" fill="#EBD526" fg:w="62" fg:x="5920"/></g><g><title>datafusion-cli`tokio::runtime::park::CachedParkThread::block_on (5,952 samples, 6.99%)</title><rect width="6.99%" height="15" x=".126%" y="533" fill="#ED7A26" fg:w="5952" fg:x="107"/><text x=".376%" y="543.5">datafusio..</text></g><g><title>libdyld.dylib`tlv_get_addr (77 samples, 0.09%)</title><rect width=".09%" height="15" x="7.026%" y="517" fill="#F4DA23" fg:w="77" fg:x="5982"/></g><g><title>datafusion-cli`tokio::runtime::park::Inner::park (27 samples, 0.03%)</title><rect width=".032%" height="15" x="7.116%" y="533" fill="#F0442F" fg:w="27" fg:x="6059"/></g><g><title>datafusion-cli`std::rt::lang_start::_{{closure}} (6,136 samples, 7.21%)</title><rect width="7.206%" height="15" x="0%" y="581" fill="#D21035" fg:w="6136" fg:x="0"/><text x=".25%" y="591.5">datafusion..</text></g><g><title>datafusion-cli`std::sys::backtrace::__rust_begin_short_backtrace (6,136 samples, 7.21%)</title><rect width="7.206%" height="15" x="0%" y="565" fill="#EB7C0C" fg:w="6136" fg:x="0"/><text x=".25%" y="575.5">datafusion..</text></g><g><title>datafusion-cli`datafusion_cli::main (6,136 samples, 7.21%)</title><rect width="7.206%" height="15" x="0%" y="549" fill="#E0A90B" fg:w="6136" fg:x="0"/><text x=".25%" y="559.5">datafusion..</text></g><g><title>libdyld.dylib`tlv_get_addr (50 samples, 0.06%)</title><rect width=".059%" height="15" x="7.148%" y="533" fill="#FAA602" fg:w="50" fg:x="6086"/></g><g><title>datafusion-cli`main (6,137 samples, 7.21%)</title><rect width="7.208%" height="15" x="0%" y="613" fill="#F2D81D" fg:w="6137" fg:x="0"/><text x=".25%" y="623.5">datafusion..</text></g><g><title>datafusion-cli`std::rt::lang_start_internal (6,137 samples, 7.21%)</title><rect width="7.208%" height="15" x="0%" y="597" fill="#E6741B" fg:w="6137" fg:x="0"/><text x=".25%" y="607.5">datafusion..</text></g><g><title>datafusion-cli`mi_arenas_try_purge (51 samples, 0.06%)</title><rect width=".06%" height="15" x="7.208%" y="549" fill="#E46330" fg:w="51" fg:x="6137"/></g><g><title>datafusion-cli`mi_arena_purge (51 samples, 0.06%)</title><rect width=".06%" height="15" x="7.208%" y="533" fill="#FD0B06" fg:w="51" fg:x="6137"/></g><g><title>libsystem_kernel.dylib`madvise (51 samples, 0.06%)</title><rect width=".06%" height="15" x="7.208%" y="517" fill="#F78F27" fg:w="51" fg:x="6137"/></g><g><title>dyld`start (6,193 samples, 7.27%)</title><rect width="7.273%" height="15" x="0%" y="629" fill="#EC610A" fg:w="6193" fg:x="0"/><text x=".25%" y="639.5">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (56 samples, 0.07%)</title><rect width=".066%" height="15" x="7.208%" y="613" fill="#E9D013" fg:w="56" fg:x="6137"/></g><g><title>libsystem_c.dylib`exit (56 samples, 0.07%)</title><rect width=".066%" height="15" x="7.208%" y="597" fill="#D8A402" fg:w="56" fg:x="6137"/></g><g><title>libsystem_c.dylib`__cxa_finalize_ranges (56 samples, 0.07%)</title><rect width=".066%" height="15" x="7.208%" y="581" fill="#DC8105" fg:w="56" fg:x="6137"/></g><g><title>datafusion-cli`mi_process_done (56 samples, 0.07%)</title><rect width=".066%" height="15" x="7.208%" y="565" fill="#F2110A" fg:w="56" fg:x="6137"/></g><g><title>libsystem_kernel.dylib`__exit (47 samples, 0.06%)</title><rect width=".055%" height="15" x="7.273%" y="629" fill="#F26B00" fg:w="47" fg:x="6193"/></g><g><title>datafusion-cli`parking_lot::condvar::Condvar::wait_until_internal (21 samples, 0.02%)</title><rect width=".025%" height="15" x="7.344%" y="405" fill="#FB1C1F" fg:w="21" fg:x="6253"/></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (20 samples, 0.02%)</title><rect width=".024%" height="15" x="7.345%" y="389" fill="#E9DF0A" fg:w="20" fg:x="6254"/></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::park::Parker::park (30 samples, 0.04%)</title><rect width=".035%" height="15" x="7.344%" y="421" fill="#D7151B" fg:w="30" fg:x="6253"/></g><g><title>datafusion-cli`tokio::runtime::time::Driver::park_internal (9 samples, 0.01%)</title><rect width=".011%" height="15" x="7.369%" y="405" fill="#E81715" fg:w="9" fg:x="6274"/></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (31 samples, 0.04%)</title><rect width=".036%" height="15" x="7.344%" y="437" fill="#F40517" fg:w="31" fg:x="6253"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::average::AvgGroupsAccumulator&lt;T,F&gt; as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::merge_batch (32 samples, 0.04%)</title><rect width=".038%" height="15" x="7.394%" y="293" fill="#E2512E" fg:w="32" fg:x="6296"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::accumulate::NullState::accumulate (25 samples, 0.03%)</title><rect width=".029%" height="15" x="7.403%" y="277" fill="#F7461E" fg:w="25" fg:x="6303"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::count::CountGroupsAccumulator as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::merge_batch (12 samples, 0.01%)</title><rect width=".014%" height="15" x="7.432%" y="293" fill="#D44413" fg:w="12" fg:x="6328"/></g><g><title>datafusion-cli`_mi_malloc_generic (18 samples, 0.02%)</title><rect width=".021%" height="15" x="7.654%" y="229" fill="#F0BB0D" fg:w="18" fg:x="6517"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (19 samples, 0.02%)</title><rect width=".022%" height="15" x="7.654%" y="245" fill="#DF711A" fg:w="19" fg:x="6517"/></g><g><title>datafusion-cli`mi_malloc_aligned (12 samples, 0.01%)</title><rect width=".014%" height="15" x="7.676%" y="245" fill="#CEC002" fg:w="12" fg:x="6536"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.04%)</title><rect width=".042%" height="15" x="7.65%" y="261" fill="#F16C04" fg:w="36" fg:x="6514"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_common::scalar::ScalarValue&gt; (13 samples, 0.02%)</title><rect width=".015%" height="15" x="7.703%" y="261" fill="#F7AD31" fg:w="13" fg:x="6559"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (10 samples, 0.01%)</title><rect width=".012%" height="15" x="7.718%" y="261" fill="#E07223" fg:w="10" fg:x="6572"/></g><g><title>datafusion-cli`_mi_malloc_generic (9 samples, 0.01%)</title><rect width=".011%" height="15" x="7.72%" y="245" fill="#F59F1B" fg:w="9" fg:x="6573"/></g><g><title>datafusion-cli`mi_malloc_aligned (9 samples, 0.01%)</title><rect width=".011%" height="15" x="7.73%" y="261" fill="#F5AC2C" fg:w="9" fg:x="6582"/></g><g><title>libsystem_platform.dylib`_platform_memcmp (28 samples, 0.03%)</title><rect width=".033%" height="15" x="7.742%" y="261" fill="#EC170B" fg:w="28" fg:x="6592"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::MinAccumulator as datafusion_expr_common::accumulator::Accumulator&gt;::update_batch (179 samples, 0.21%)</title><rect width=".21%" height="15" x="7.592%" y="277" fill="#CD7526" fg:w="179" fg:x="6464"/></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.03%)</title><rect width=".027%" height="15" x="7.775%" y="261" fill="#ED4819" fg:w="23" fg:x="6620"/></g><g><title>datafusion-cli`mi_malloc_aligned (10 samples, 0.01%)</title><rect width=".012%" height="15" x="7.819%" y="245" fill="#F44609" fg:w="10" fg:x="6658"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (27 samples, 0.03%)</title><rect width=".032%" height="15" x="7.809%" y="277" fill="#D97D27" fg:w="27" fg:x="6649"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (27 samples, 0.03%)</title><rect width=".032%" height="15" x="7.809%" y="261" fill="#EB240A" fg:w="27" fg:x="6649"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericBinaryType&lt;i32&gt;&gt;&gt; (11 samples, 0.01%)</title><rect width=".013%" height="15" x="7.857%" y="261" fill="#FB7B2F" fg:w="11" fg:x="6690"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (22 samples, 0.03%)</title><rect width=".026%" height="15" x="7.849%" y="277" fill="#DD0D0D" fg:w="22" fg:x="6683"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::size (27 samples, 0.03%)</title><rect width=".032%" height="15" x="7.881%" y="277" fill="#EE8309" fg:w="27" fg:x="6710"/></g><g><title>datafusion-cli`mi_heap_realloc_zero_aligned_at (9 samples, 0.01%)</title><rect width=".011%" height="15" x="7.931%" y="149" fill="#D33208" fg:w="9" fg:x="6753"/></g><g><title>datafusion-cli`arrow_select::take::take_bytes (61 samples, 0.07%)</title><rect width=".072%" height="15" x="7.917%" y="181" fill="#F5B618" fg:w="61" fg:x="6741"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (49 samples, 0.06%)</title><rect width=".058%" height="15" x="7.931%" y="165" fill="#F20E25" fg:w="49" fg:x="6753"/></g><g><title>libsystem_platform.dylib`_platform_memmove (40 samples, 0.05%)</title><rect width=".047%" height="15" x="7.942%" y="149" fill="#F6E40C" fg:w="40" fg:x="6762"/></g><g><title>datafusion-cli`datafusion_common::utils::get_arrayref_at_indices (142 samples, 0.17%)</title><rect width=".167%" height="15" x="7.912%" y="277" fill="#D5370F" fg:w="142" fg:x="6737"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (142 samples, 0.17%)</title><rect width=".167%" height="15" x="7.912%" y="261" fill="#D10903" fg:w="142" fg:x="6737"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (142 samples, 0.17%)</title><rect width=".167%" height="15" x="7.912%" y="245" fill="#E63B1E" fg:w="142" fg:x="6737"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (142 samples, 0.17%)</title><rect width=".167%" height="15" x="7.912%" y="229" fill="#D17915" fg:w="142" fg:x="6737"/></g><g><title>datafusion-cli`arrow_select::take::take (142 samples, 0.17%)</title><rect width=".167%" height="15" x="7.912%" y="213" fill="#DC6D0D" fg:w="142" fg:x="6737"/></g><g><title>datafusion-cli`arrow_select::take::take_impl (141 samples, 0.17%)</title><rect width=".166%" height="15" x="7.913%" y="197" fill="#E81201" fg:w="141" fg:x="6738"/></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.09%)</title><rect width=".09%" height="15" x="7.989%" y="181" fill="#D7292A" fg:w="77" fg:x="6802"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (17 samples, 0.02%)</title><rect width=".02%" height="15" x="8.092%" y="261" fill="#E07B24" fg:w="17" fg:x="6890"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect width=".02%" height="15" x="8.092%" y="245" fill="#F07D03" fg:w="17" fg:x="6890"/></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.02%)</title><rect width=".02%" height="15" x="8.092%" y="229" fill="#CD6232" fg:w="17" fg:x="6890"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::size (10 samples, 0.01%)</title><rect width=".012%" height="15" x="8.112%" y="261" fill="#CDB925" fg:w="10" fg:x="6907"/></g><g><title>datafusion-cli`&lt;datafusion_common::scalar::ScalarValue as core::convert::TryFrom&lt;&amp;arrow_schema::datatype::DataType&gt;&gt;::try_from (14 samples, 0.02%)</title><rect width=".016%" height="15" x="8.138%" y="245" fill="#EECF0F" fg:w="14" fg:x="6929"/></g><g><title>datafusion-cli`_mi_free_delayed_block (11 samples, 0.01%)</title><rect width=".013%" height="15" x="8.169%" y="197" fill="#D5C72A" fg:w="11" fg:x="6956"/></g><g><title>datafusion-cli`mi_find_page (10 samples, 0.01%)</title><rect width=".012%" height="15" x="8.182%" y="197" fill="#EBC90B" fg:w="10" fg:x="6967"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (28 samples, 0.03%)</title><rect width=".033%" height="15" x="8.167%" y="229" fill="#CF2E0B" fg:w="28" fg:x="6954"/></g><g><title>datafusion-cli`_mi_malloc_generic (28 samples, 0.03%)</title><rect width=".033%" height="15" x="8.167%" y="213" fill="#F12323" fg:w="28" fg:x="6954"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::Min as datafusion_expr::udaf::AggregateUDFImpl&gt;::accumulator (44 samples, 0.05%)</title><rect width=".052%" height="15" x="8.154%" y="245" fill="#F3202F" fg:w="44" fg:x="6943"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter::make_accumulators_if_needed (110 samples, 0.13%)</title><rect width=".129%" height="15" x="8.079%" y="277" fill="#F7CA17" fg:w="110" fg:x="6879"/></g><g><title>datafusion-cli`datafusion_physical_expr::aggregate::AggregateFunctionExpr::create_accumulator (66 samples, 0.08%)</title><rect width=".077%" height="15" x="8.131%" y="261" fill="#DB660B" fg:w="66" fg:x="6923"/></g><g><title>datafusion-cli`_mi_malloc_generic (9 samples, 0.01%)</title><rect width=".011%" height="15" x="8.286%" y="213" fill="#F36E2C" fg:w="9" fg:x="7055"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (10 samples, 0.01%)</title><rect width=".012%" height="15" x="8.286%" y="229" fill="#DE4A36" fg:w="10" fg:x="7055"/></g><g><title>datafusion-cli`mi_malloc_aligned (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.297%" y="229" fill="#D8630C" fg:w="13" fg:x="7065"/></g><g><title>datafusion-cli`&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::slice (68 samples, 0.08%)</title><rect width=".08%" height="15" x="8.238%" y="245" fill="#E2161A" fg:w="68" fg:x="7014"/></g><g><title>datafusion-cli`mi_malloc_aligned (10 samples, 0.01%)</title><rect width=".012%" height="15" x="8.322%" y="245" fill="#D9A30A" fg:w="10" fg:x="7086"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (93 samples, 0.11%)</title><rect width=".109%" height="15" x="8.227%" y="261" fill="#D51935" fg:w="93" fg:x="7005"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::slice_and_maybe_filter (115 samples, 0.14%)</title><rect width=".135%" height="15" x="8.208%" y="277" fill="#FC691A" fg:w="115" fg:x="6989"/></g><g><title>datafusion-cli`mi_free_block_delayed_mt (11 samples, 0.01%)</title><rect width=".013%" height="15" x="8.353%" y="277" fill="#DC272B" fg:w="11" fg:x="7112"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::merge_batch (865 samples, 1.02%)</title><rect width="1.016%" height="15" x="7.452%" y="293" fill="#E54430" fg:w="865" fg:x="6345"/></g><g><title>libsystem_platform.dylib`_platform_memmove (83 samples, 0.10%)</title><rect width=".098%" height="15" x="8.37%" y="277" fill="#FC0820" fg:w="83" fg:x="7127"/></g><g><title>datafusion-cli`&lt;hashbrown::raw::inner::RawTable&lt;T&gt; as datafusion_common::utils::proxy::RawTableAllocExt&gt;::insert_accounted (52 samples, 0.06%)</title><rect width=".061%" height="15" x="8.605%" y="261" fill="#DF142B" fg:w="52" fg:x="7327"/></g><g><title>datafusion-cli`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (32 samples, 0.04%)</title><rect width=".038%" height="15" x="8.629%" y="245" fill="#E55131" fg:w="32" fg:x="7347"/></g><g><title>datafusion-cli`&lt;str as datafusion_common::hash_utils::HashValue&gt;::hash_one (61 samples, 0.07%)</title><rect width=".072%" height="15" x="8.666%" y="261" fill="#EC1C24" fg:w="61" fg:x="7379"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (69 samples, 0.08%)</title><rect width=".081%" height="15" x="8.743%" y="261" fill="#F9B91A" fg:w="69" fg:x="7444"/></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.08%)</title><rect width=".075%" height="15" x="8.748%" y="245" fill="#F9AE21" fg:w="64" fg:x="7449"/></g><g><title>datafusion-cli`datafusion_physical_expr_common::binary_map::ArrowBytesMap&lt;O,V&gt;::insert_if_new (299 samples, 0.35%)</title><rect width=".351%" height="15" x="8.475%" y="277" fill="#E9C925" fg:w="299" fg:x="7216"/></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.826%" y="277" fill="#DD4E1A" fg:w="13" fg:x="7515"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::aggregates::group_values::bytes::GroupValuesByes&lt;O&gt; as datafusion_physical_plan::aggregates::group_values::GroupValues&gt;::intern (380 samples, 0.45%)</title><rect width=".446%" height="15" x="8.468%" y="293" fill="#FA7F1E" fg:w="380" fg:x="7210"/></g><g><title>libsystem_platform.dylib`_platform_memmove (62 samples, 0.07%)</title><rect width=".073%" height="15" x="8.841%" y="277" fill="#E6312C" fg:w="62" fg:x="7528"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.922%" y="245" fill="#E54317" fg:w="13" fg:x="7597"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.922%" y="229" fill="#F9532F" fg:w="13" fg:x="7597"/></g><g><title>datafusion-cli`_mi_malloc_generic (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.922%" y="213" fill="#D72B03" fg:w="13" fg:x="7597"/></g><g><title>datafusion-cli`_mi_free_delayed_block (13 samples, 0.02%)</title><rect width=".015%" height="15" x="8.922%" y="197" fill="#EE9A0D" fg:w="13" fg:x="7597"/></g><g><title>datafusion-cli`_mi_page_free (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="149" fill="#DB3802" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`mi_segment_page_clear (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="133" fill="#E90004" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="117" fill="#EB1E07" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`mi_segment_span_free (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="101" fill="#FA4F0D" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`mi_segment_try_purge (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="85" fill="#D39222" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`mi_segment_purge (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="69" fill="#E41626" fg:w="15" fg:x="7661"/></g><g><title>libsystem_kernel.dylib`madvise (15 samples, 0.02%)</title><rect width=".018%" height="15" x="8.998%" y="53" fill="#EBA805" fg:w="15" fg:x="7661"/></g><g><title>datafusion-cli`_mi_free_delayed_block (67 samples, 0.08%)</title><rect width=".079%" height="15" x="8.941%" y="165" fill="#DD9B10" fg:w="67" fg:x="7613"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (70 samples, 0.08%)</title><rect width=".082%" height="15" x="8.94%" y="213" fill="#D7D735" fg:w="70" fg:x="7612"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (69 samples, 0.08%)</title><rect width=".081%" height="15" x="8.941%" y="197" fill="#DF040A" fg:w="69" fg:x="7613"/></g><g><title>datafusion-cli`_mi_malloc_generic (69 samples, 0.08%)</title><rect width=".081%" height="15" x="8.941%" y="181" fill="#EA6706" fg:w="69" fg:x="7613"/></g><g><title>datafusion-cli`arrow_data::transform::variable_size::build_extend::_{{closure}} (13 samples, 0.02%)</title><rect width=".015%" height="15" x="9.022%" y="197" fill="#E36100" fg:w="13" fg:x="7682"/></g><g><title>datafusion-cli`arrow_data::transform::utils::extend_offsets (13 samples, 0.02%)</title><rect width=".015%" height="15" x="9.022%" y="181" fill="#EA9635" fg:w="13" fg:x="7682"/></g><g><title>datafusion-cli`arrow_data::transform::MutableArrayData::extend (67 samples, 0.08%)</title><rect width=".079%" height="15" x="9.022%" y="213" fill="#E4C936" fg:w="67" fg:x="7682"/></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.06%)</title><rect width=".063%" height="15" x="9.037%" y="197" fill="#DE1625" fg:w="54" fg:x="7695"/></g><g><title>datafusion-cli`arrow_select::concat::concat (146 samples, 0.17%)</title><rect width=".172%" height="15" x="8.938%" y="245" fill="#ED3520" fg:w="146" fg:x="7610"/></g><g><title>datafusion-cli`arrow_select::concat::concat_fallback (144 samples, 0.17%)</title><rect width=".169%" height="15" x="8.94%" y="229" fill="#E91935" fg:w="144" fg:x="7612"/></g><g><title>datafusion-cli`arrow_select::concat::concat_batches (164 samples, 0.19%)</title><rect width=".193%" height="15" x="8.922%" y="261" fill="#D22822" fg:w="164" fg:x="7597"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.01%)</title><rect width=".012%" height="15" x="9.115%" y="245" fill="#F1DC2C" fg:w="10" fg:x="7761"/></g><g><title>datafusion-cli`datafusion_physical_plan::coalesce::BatchCoalescer::finish_batch (175 samples, 0.21%)</title><rect width=".205%" height="15" x="8.922%" y="277" fill="#EB1C23" fg:w="175" fg:x="7597"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (11 samples, 0.01%)</title><rect width=".013%" height="15" x="9.115%" y="261" fill="#D23811" fg:w="11" fg:x="7761"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.03%)</title><rect width=".034%" height="15" x="9.128%" y="261" fill="#E0821D" fg:w="29" fg:x="7772"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (29 samples, 0.03%)</title><rect width=".034%" height="15" x="9.128%" y="245" fill="#EBD408" fg:w="29" fg:x="7772"/></g><g><title>datafusion-cli`_mi_malloc_generic (29 samples, 0.03%)</title><rect width=".034%" height="15" x="9.128%" y="229" fill="#DF2132" fg:w="29" fg:x="7772"/></g><g><title>datafusion-cli`_mi_free_delayed_block (29 samples, 0.03%)</title><rect width=".034%" height="15" x="9.128%" y="213" fill="#DB950D" fg:w="29" fg:x="7772"/></g><g><title>datafusion-cli`datafusion_physical_plan::coalesce::BatchCoalescer::push_batch (30 samples, 0.04%)</title><rect width=".035%" height="15" x="9.128%" y="277" fill="#FA9C1D" fg:w="30" fg:x="7772"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::coalesce_batches::CoalesceBatchesStream as futures_core::stream::Stream&gt;::poll_next (218 samples, 0.26%)</title><rect width=".256%" height="15" x="8.914%" y="293" fill="#D8C113" fg:w="218" fg:x="7590"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::slice_and_maybe_filter (13 samples, 0.02%)</title><rect width=".015%" height="15" x="9.19%" y="293" fill="#D8870E" fg:w="13" fg:x="7825"/></g><g><title>datafusion-cli`_mi_free_delayed_block (128 samples, 0.15%)</title><rect width=".15%" height="15" x="9.345%" y="117" fill="#F12F05" fg:w="128" fg:x="7957"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (137 samples, 0.16%)</title><rect width=".161%" height="15" x="9.343%" y="149" fill="#E92A23" fg:w="137" fg:x="7955"/></g><g><title>datafusion-cli`_mi_malloc_generic (137 samples, 0.16%)</title><rect width=".161%" height="15" x="9.343%" y="133" fill="#E70D06" fg:w="137" fg:x="7955"/></g><g><title>datafusion-cli`mi_malloc_aligned (31 samples, 0.04%)</title><rect width=".036%" height="15" x="9.504%" y="149" fill="#CFB528" fg:w="31" fg:x="8092"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (182 samples, 0.21%)</title><rect width=".214%" height="15" x="9.33%" y="165" fill="#FEAD31" fg:w="182" fg:x="7944"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::MaxAccumulator as datafusion_expr_common::accumulator::Accumulator&gt;::evaluate (357 samples, 0.42%)</title><rect width=".419%" height="15" x="9.292%" y="197" fill="#DD0126" fg:w="357" fg:x="7912"/></g><g><title>datafusion-cli`&lt;datafusion_common::scalar::ScalarValue as core::clone::Clone&gt;::clone (353 samples, 0.41%)</title><rect width=".415%" height="15" x="9.297%" y="181" fill="#CE7C2E" fg:w="353" fg:x="7916"/></g><g><title>libsystem_platform.dylib`_platform_memmove (135 samples, 0.16%)</title><rect width=".159%" height="15" x="9.553%" y="165" fill="#F9150B" fg:w="135" fg:x="8134"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_common::scalar::ScalarValue&gt; (12 samples, 0.01%)</title><rect width=".014%" height="15" x="9.727%" y="181" fill="#DEC928" fg:w="12" fg:x="8282"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::AccumulatorState&gt; (31 samples, 0.04%)</title><rect width=".036%" height="15" x="9.717%" y="197" fill="#EB3D1D" fg:w="31" fg:x="8274"/></g><g><title>datafusion-cli`mi_free_block_mt (11 samples, 0.01%)</title><rect width=".013%" height="15" x="9.741%" y="181" fill="#DBCF03" fg:w="11" fg:x="8294"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::size (16 samples, 0.02%)</title><rect width=".019%" height="15" x="9.754%" y="197" fill="#DE382E" fg:w="16" fg:x="8305"/></g><g><title>datafusion-cli`mi_free (12 samples, 0.01%)</title><rect width=".014%" height="15" x="9.773%" y="197" fill="#EF4C36" fg:w="12" fg:x="8321"/></g><g><title>datafusion-cli`mi_free_block_delayed_mt (53 samples, 0.06%)</title><rect width=".062%" height="15" x="9.787%" y="197" fill="#E77C1B" fg:w="53" fg:x="8333"/></g><g><title>datafusion-cli`mi_free_block_mt (33 samples, 0.04%)</title><rect width=".039%" height="15" x="9.849%" y="197" fill="#F9C306" fg:w="33" fg:x="8386"/></g><g><title>datafusion-cli`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (555 samples, 0.65%)</title><rect width=".652%" height="15" x="9.256%" y="213" fill="#EDAE2F" fg:w="555" fg:x="7881"/></g><g><title>datafusion-cli`mi_free_generic_mt (17 samples, 0.02%)</title><rect width=".02%" height="15" x="9.888%" y="197" fill="#CEC91F" fg:w="17" fg:x="8419"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect width=".032%" height="15" x="9.911%" y="213" fill="#E73934" fg:w="27" fg:x="8439"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (27 samples, 0.03%)</title><rect width=".032%" height="15" x="9.911%" y="197" fill="#F8B116" fg:w="27" fg:x="8439"/></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.03%)</title><rect width=".028%" height="15" x="9.915%" y="181" fill="#D7D325" fg:w="24" fg:x="8442"/></g><g><title>datafusion-cli`mi_free_block_delayed_mt (9 samples, 0.01%)</title><rect width=".011%" height="15" x="9.955%" y="213" fill="#F18033" fg:w="9" fg:x="8476"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (650 samples, 0.76%)</title><rect width=".763%" height="15" x="9.207%" y="245" fill="#E3A51F" fg:w="650" fg:x="7839"/></g><g><title>datafusion-cli`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (647 samples, 0.76%)</title><rect width=".76%" height="15" x="9.21%" y="229" fill="#E4A718" fg:w="647" fg:x="7842"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect width=".019%" height="15" x="9.999%" y="197" fill="#E48F0C" fg:w="16" fg:x="8514"/></g><g><title>datafusion-cli`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect width=".016%" height="15" x="10.002%" y="181" fill="#F99508" fg:w="14" fg:x="8516"/></g><g><title>datafusion-cli`mi_heap_realloc_zero_aligned_at (9 samples, 0.01%)</title><rect width=".011%" height="15" x="10.024%" y="181" fill="#F3232C" fg:w="9" fg:x="8535"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (43 samples, 0.05%)</title><rect width=".051%" height="15" x="10.024%" y="197" fill="#F65909" fg:w="43" fg:x="8535"/></g><g><title>libsystem_platform.dylib`_platform_memmove (34 samples, 0.04%)</title><rect width=".04%" height="15" x="10.034%" y="181" fill="#E9D50D" fg:w="34" fg:x="8544"/></g><g><title>datafusion-cli`&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;Ptr&gt;&gt;&gt;::from_iter (90 samples, 0.11%)</title><rect width=".106%" height="15" x="9.97%" y="213" fill="#E98D29" fg:w="90" fg:x="8489"/></g><g><title>datafusion-cli`datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream::set_input_done_and_produce_output (856 samples, 1.01%)</title><rect width="1.005%" height="15" x="9.207%" y="293" fill="#EFA704" fg:w="856" fg:x="7839"/></g><g><title>datafusion-cli`datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream::emit (856 samples, 1.01%)</title><rect width="1.005%" height="15" x="9.207%" y="277" fill="#D1D910" fg:w="856" fg:x="7839"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::evaluate (856 samples, 1.01%)</title><rect width="1.005%" height="15" x="9.207%" y="261" fill="#DB5823" fg:w="856" fg:x="7839"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::iter_to_array (206 samples, 0.24%)</title><rect width=".242%" height="15" x="9.97%" y="245" fill="#DCC117" fg:w="206" fg:x="8489"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (206 samples, 0.24%)</title><rect width=".242%" height="15" x="9.97%" y="229" fill="#E65A34" fg:w="206" fg:x="8489"/></g><g><title>libsystem_platform.dylib`_platform_memmove (104 samples, 0.12%)</title><rect width=".122%" height="15" x="10.09%" y="213" fill="#FC6A13" fg:w="104" fg:x="8591"/></g><g><title>datafusion-cli`mi_free (20 samples, 0.02%)</title><rect width=".024%" height="15" x="10.212%" y="293" fill="#CE4A14" fg:w="20" fg:x="8695"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream as futures_core::stream::Stream&gt;::poll_next (2,428 samples, 2.85%)</title><rect width="2.852%" height="15" x="7.393%" y="309" fill="#E68A2C" fg:w="2428" fg:x="6295"/><text x="7.643%" y="319.5">da..</text></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::projection::ProjectionStream as futures_core::stream::Stream&gt;::poll_next (2,437 samples, 2.86%)</title><rect width="2.862%" height="15" x="7.39%" y="357" fill="#EBB62B" fg:w="2437" fg:x="6292"/><text x="7.64%" y="367.5">da..</text></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::coalesce_batches::CoalesceBatchesStream as futures_core::stream::Stream&gt;::poll_next (2,437 samples, 2.86%)</title><rect width="2.862%" height="15" x="7.39%" y="341" fill="#F21033" fg:w="2437" fg:x="6292"/><text x="7.64%" y="351.5">da..</text></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::filter::FilterExecStream as futures_core::stream::Stream&gt;::poll_next (2,436 samples, 2.86%)</title><rect width="2.861%" height="15" x="7.391%" y="325" fill="#F80904" fg:w="2436" fg:x="6293"/><text x="7.641%" y="335.5">da..</text></g><g><title>datafusion-cli`datafusion_physical_plan::common::spawn_buffered::_{{closure}} (2,439 samples, 2.86%)</title><rect width="2.865%" height="15" x="7.388%" y="405" fill="#D21F16" fg:w="2439" fg:x="6291"/><text x="7.638%" y="415.5">da..</text></g><g><title>datafusion-cli`&lt;futures_util::stream::try_stream::try_flatten::TryFlatten&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (2,439 samples, 2.86%)</title><rect width="2.865%" height="15" x="7.388%" y="389" fill="#EF3627" fg:w="2439" fg:x="6291"/><text x="7.638%" y="399.5">da..</text></g><g><title>datafusion-cli`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (2,438 samples, 2.86%)</title><rect width="2.863%" height="15" x="7.39%" y="373" fill="#E66329" fg:w="2438" fg:x="6292"/><text x="7.64%" y="383.5">da..</text></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (47 samples, 0.06%)</title><rect width=".055%" height="15" x="10.302%" y="277" fill="#FD6A0C" fg:w="47" fg:x="8772"/></g><g><title>libsystem_platform.dylib`_platform_memmove (39 samples, 0.05%)</title><rect width=".046%" height="15" x="10.312%" y="261" fill="#D52E29" fg:w="39" fg:x="8780"/></g><g><title>datafusion-cli`arrow_select::take::take_bytes (79 samples, 0.09%)</title><rect width=".093%" height="15" x="10.267%" y="293" fill="#D78523" fg:w="79" fg:x="8742"/></g><g><title>datafusion-cli`arrow_select::take::take_primitive (9 samples, 0.01%)</title><rect width=".011%" height="15" x="10.363%" y="293" fill="#D51C05" fg:w="9" fg:x="8824"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (261 samples, 0.31%)</title><rect width=".306%" height="15" x="10.253%" y="389" fill="#D74D31" fg:w="261" fg:x="8730"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (260 samples, 0.31%)</title><rect width=".305%" height="15" x="10.254%" y="373" fill="#F86416" fg:w="260" fg:x="8731"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (260 samples, 0.31%)</title><rect width=".305%" height="15" x="10.254%" y="357" fill="#D04309" fg:w="260" fg:x="8731"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (260 samples, 0.31%)</title><rect width=".305%" height="15" x="10.254%" y="341" fill="#DB8515" fg:w="260" fg:x="8731"/></g><g><title>datafusion-cli`arrow_select::take::take (259 samples, 0.30%)</title><rect width=".304%" height="15" x="10.255%" y="325" fill="#F62E1D" fg:w="259" fg:x="8732"/></g><g><title>datafusion-cli`arrow_select::take::take_impl (257 samples, 0.30%)</title><rect width=".302%" height="15" x="10.258%" y="309" fill="#F6B934" fg:w="257" fg:x="8734"/></g><g><title>libsystem_platform.dylib`_platform_memmove (158 samples, 0.19%)</title><rect width=".186%" height="15" x="10.374%" y="293" fill="#FC880B" fg:w="158" fg:x="8833"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::average::AvgGroupsAccumulator&lt;T,F&gt; as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::update_batch (265 samples, 0.31%)</title><rect width=".311%" height="15" x="10.563%" y="373" fill="#DB8A35" fg:w="265" fg:x="8994"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::accumulate::NullState::accumulate (263 samples, 0.31%)</title><rect width=".309%" height="15" x="10.565%" y="357" fill="#D33317" fg:w="263" fg:x="8996"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::count::CountGroupsAccumulator as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::update_batch (122 samples, 0.14%)</title><rect width=".143%" height="15" x="10.874%" y="373" fill="#F7DD1C" fg:w="122" fg:x="9259"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::accumulate::accumulate_indices (121 samples, 0.14%)</title><rect width=".142%" height="15" x="10.875%" y="357" fill="#FBDE2D" fg:w="121" fg:x="9260"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::MinAccumulator as datafusion_expr_common::accumulator::Accumulator&gt;::update_batch (9 samples, 0.01%)</title><rect width=".011%" height="15" x="11.021%" y="373" fill="#D9A235" fg:w="9" fg:x="9384"/></g><g><title>datafusion-cli`mi_find_page (13 samples, 0.02%)</title><rect width=".015%" height="15" x="12.01%" y="293" fill="#E55D0E" fg:w="13" fg:x="10226"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (20 samples, 0.02%)</title><rect width=".024%" height="15" x="12.01%" y="325" fill="#D14331" fg:w="20" fg:x="10226"/></g><g><title>datafusion-cli`_mi_malloc_generic (20 samples, 0.02%)</title><rect width=".024%" height="15" x="12.01%" y="309" fill="#D5571D" fg:w="20" fg:x="10226"/></g><g><title>datafusion-cli`mi_malloc_aligned (22 samples, 0.03%)</title><rect width=".026%" height="15" x="12.033%" y="325" fill="#CD9734" fg:w="22" fg:x="10246"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.07%)</title><rect width=".069%" height="15" x="11.995%" y="341" fill="#FDD727" fg:w="59" fg:x="10213"/></g><g><title>datafusion-cli`DYLD-STUB$$memcmp (53 samples, 0.06%)</title><rect width=".062%" height="15" x="12.064%" y="341" fill="#DDDC29" fg:w="53" fg:x="10272"/></g><g><title>datafusion-cli`arrow_arith::aggregate::min_max_helper (227 samples, 0.27%)</title><rect width=".267%" height="15" x="12.129%" y="341" fill="#DA8515" fg:w="227" fg:x="10327"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_common::scalar::ScalarValue&gt; (13 samples, 0.02%)</title><rect width=".015%" height="15" x="12.398%" y="341" fill="#DDC12B" fg:w="13" fg:x="10556"/></g><g><title>datafusion-cli`mi_malloc_aligned (17 samples, 0.02%)</title><rect width=".02%" height="15" x="12.418%" y="341" fill="#F08034" fg:w="17" fg:x="10573"/></g><g><title>libsystem_platform.dylib`_platform_memcmp (395 samples, 0.46%)</title><rect width=".464%" height="15" x="12.44%" y="341" fill="#FD720C" fg:w="395" fg:x="10592"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::MinAccumulator as datafusion_expr_common::accumulator::Accumulator&gt;::update_batch (913 samples, 1.07%)</title><rect width="1.072%" height="15" x="11.903%" y="357" fill="#D7DF2F" fg:w="913" fg:x="10135"/></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.07%)</title><rect width=".072%" height="15" x="12.904%" y="341" fill="#F8E117" fg:w="61" fg:x="10987"/></g><g><title>datafusion-cli`__rust_dealloc (9 samples, 0.01%)</title><rect width=".011%" height="15" x="12.98%" y="357" fill="#FA6C00" fg:w="9" fg:x="11052"/></g><g><title>datafusion-cli`_mi_malloc_generic (16 samples, 0.02%)</title><rect width=".019%" height="15" x="13.015%" y="309" fill="#E4D007" fg:w="16" fg:x="11082"/></g><g><title>datafusion-cli`mi_find_page (14 samples, 0.02%)</title><rect width=".016%" height="15" x="13.018%" y="293" fill="#F42D0A" fg:w="14" fg:x="11084"/></g><g><title>datafusion-cli`_mi_heap_realloc_zero (20 samples, 0.02%)</title><rect width=".024%" height="15" x="13.012%" y="325" fill="#CF7D19" fg:w="20" fg:x="11079"/></g><g><title>datafusion-cli`_mi_page_free (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="277" fill="#D2C312" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_segment_page_clear (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="261" fill="#F9500C" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="245" fill="#DD4109" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_segment_span_free (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="229" fill="#EB3124" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_segment_try_purge (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="213" fill="#E12014" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_segment_purge (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="197" fill="#D78D2E" fg:w="10" fg:x="11099"/></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.035%" y="181" fill="#FAA02F" fg:w="10" fg:x="11099"/></g><g><title>datafusion-cli`mi_find_page (12 samples, 0.01%)</title><rect width=".014%" height="15" x="13.035%" y="293" fill="#D8DE28" fg:w="12" fg:x="11099"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (17 samples, 0.02%)</title><rect width=".02%" height="15" x="13.035%" y="325" fill="#EAD927" fg:w="17" fg:x="11099"/></g><g><title>datafusion-cli`_mi_malloc_generic (17 samples, 0.02%)</title><rect width=".02%" height="15" x="13.035%" y="309" fill="#CFB228" fg:w="17" fg:x="11099"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (77 samples, 0.09%)</title><rect width=".09%" height="15" x="12.991%" y="357" fill="#DD880D" fg:w="77" fg:x="11061"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (72 samples, 0.08%)</title><rect width=".085%" height="15" x="12.996%" y="341" fill="#F9C70A" fg:w="72" fg:x="11066"/></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.02%)</title><rect width=".019%" height="15" x="13.062%" y="325" fill="#F9DE0D" fg:w="16" fg:x="11122"/></g><g><title>datafusion-cli`_mi_page_free (24 samples, 0.03%)</title><rect width=".028%" height="15" x="13.085%" y="277" fill="#F4B926" fg:w="24" fg:x="11141"/></g><g><title>datafusion-cli`mi_segment_page_clear (24 samples, 0.03%)</title><rect width=".028%" height="15" x="13.085%" y="261" fill="#ECCA09" fg:w="24" fg:x="11141"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (24 samples, 0.03%)</title><rect width=".028%" height="15" x="13.085%" y="245" fill="#FAE525" fg:w="24" fg:x="11141"/></g><g><title>datafusion-cli`mi_segment_span_free (23 samples, 0.03%)</title><rect width=".027%" height="15" x="13.086%" y="229" fill="#CEAE17" fg:w="23" fg:x="11142"/></g><g><title>datafusion-cli`mi_segment_try_purge (23 samples, 0.03%)</title><rect width=".027%" height="15" x="13.086%" y="213" fill="#D3212B" fg:w="23" fg:x="11142"/></g><g><title>datafusion-cli`mi_segment_purge (23 samples, 0.03%)</title><rect width=".027%" height="15" x="13.086%" y="197" fill="#F53A32" fg:w="23" fg:x="11142"/></g><g><title>libsystem_kernel.dylib`madvise (22 samples, 0.03%)</title><rect width=".026%" height="15" x="13.087%" y="181" fill="#F44424" fg:w="22" fg:x="11143"/></g><g><title>datafusion-cli`_mi_heap_realloc_zero (27 samples, 0.03%)</title><rect width=".032%" height="15" x="13.082%" y="325" fill="#E8E50F" fg:w="27" fg:x="11139"/></g><g><title>datafusion-cli`_mi_malloc_generic (26 samples, 0.03%)</title><rect width=".03%" height="15" x="13.083%" y="309" fill="#FE1E17" fg:w="26" fg:x="11140"/></g><g><title>datafusion-cli`mi_find_page (26 samples, 0.03%)</title><rect width=".03%" height="15" x="13.083%" y="293" fill="#EBA00E" fg:w="26" fg:x="11140"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.05%)</title><rect width=".052%" height="15" x="13.081%" y="357" fill="#D49B2C" fg:w="44" fg:x="11138"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (44 samples, 0.05%)</title><rect width=".052%" height="15" x="13.081%" y="341" fill="#E20232" fg:w="44" fg:x="11138"/></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.02%)</title><rect width=".018%" height="15" x="13.115%" y="325" fill="#EAB106" fg:w="15" fg:x="11167"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.133%" y="357" fill="#D91809" fg:w="10" fg:x="11182"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericBinaryType&lt;i32&gt;&gt;&gt; (22 samples, 0.03%)</title><rect width=".026%" height="15" x="13.157%" y="341" fill="#DC0D2E" fg:w="22" fg:x="11203"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (35 samples, 0.04%)</title><rect width=".041%" height="15" x="13.145%" y="357" fill="#EFDD1B" fg:w="35" fg:x="11192"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::size (71 samples, 0.08%)</title><rect width=".083%" height="15" x="13.2%" y="357" fill="#DEC619" fg:w="71" fg:x="11239"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.284%" y="261" fill="#D3630D" fg:w="10" fg:x="11311"/></g><g><title>datafusion-cli`_mi_malloc_generic (9 samples, 0.01%)</title><rect width=".011%" height="15" x="13.549%" y="197" fill="#E86F1F" fg:w="9" fg:x="11536"/></g><g><title>datafusion-cli`mi_find_page (9 samples, 0.01%)</title><rect width=".011%" height="15" x="13.549%" y="181" fill="#F55225" fg:w="9" fg:x="11536"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (10 samples, 0.01%)</title><rect width=".012%" height="15" x="13.549%" y="213" fill="#E3952E" fg:w="10" fg:x="11536"/></g><g><title>datafusion-cli`mi_heap_realloc_zero_aligned_at (29 samples, 0.03%)</title><rect width=".034%" height="15" x="13.545%" y="229" fill="#DA2432" fg:w="29" fg:x="11533"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_overalloc (16 samples, 0.02%)</title><rect width=".019%" height="15" x="13.56%" y="213" fill="#E25030" fg:w="16" fg:x="11546"/></g><g><title>datafusion-cli`_mi_malloc_generic (16 samples, 0.02%)</title><rect width=".019%" height="15" x="13.56%" y="197" fill="#EEE00F" fg:w="16" fg:x="11546"/></g><g><title>datafusion-cli`mi_page_fresh_alloc (14 samples, 0.02%)</title><rect width=".016%" height="15" x="13.563%" y="181" fill="#F1880A" fg:w="14" fg:x="11548"/></g><g><title>datafusion-cli`mi_segments_page_alloc (14 samples, 0.02%)</title><rect width=".016%" height="15" x="13.563%" y="165" fill="#D0202D" fg:w="14" fg:x="11548"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (352 samples, 0.41%)</title><rect width=".413%" height="15" x="13.545%" y="245" fill="#CF8709" fg:w="352" fg:x="11533"/></g><g><title>libsystem_platform.dylib`_platform_memmove (322 samples, 0.38%)</title><rect width=".378%" height="15" x="13.58%" y="229" fill="#CE562C" fg:w="322" fg:x="11563"/></g><g><title>datafusion-cli`arrow_select::take::take_bytes (567 samples, 0.67%)</title><rect width=".666%" height="15" x="13.296%" y="261" fill="#F5B10F" fg:w="567" fg:x="11321"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,437 samples, 1.69%)</title><rect width="1.688%" height="15" x="13.283%" y="309" fill="#CE4032" fg:w="1437" fg:x="11310"/></g><g><title>datafusion-cli`arrow_select::take::take (1,437 samples, 1.69%)</title><rect width="1.688%" height="15" x="13.283%" y="293" fill="#EA2428" fg:w="1437" fg:x="11310"/></g><g><title>datafusion-cli`arrow_select::take::take_impl (1,436 samples, 1.69%)</title><rect width="1.687%" height="15" x="13.284%" y="277" fill="#D54008" fg:w="1436" fg:x="11311"/></g><g><title>libsystem_platform.dylib`_platform_memmove (859 samples, 1.01%)</title><rect width="1.009%" height="15" x="13.962%" y="261" fill="#D24B24" fg:w="859" fg:x="11888"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,438 samples, 1.69%)</title><rect width="1.689%" height="15" x="13.283%" y="325" fill="#E55815" fg:w="1438" fg:x="11310"/></g><g><title>datafusion-cli`datafusion_common::utils::get_arrayref_at_indices (1,439 samples, 1.69%)</title><rect width="1.69%" height="15" x="13.283%" y="357" fill="#FCCC2F" fg:w="1439" fg:x="11310"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (1,439 samples, 1.69%)</title><rect width="1.69%" height="15" x="13.283%" y="341" fill="#D04D1B" fg:w="1439" fg:x="11310"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.01%)</title><rect width=".013%" height="15" x="15.002%" y="341" fill="#DD4C1A" fg:w="11" fg:x="12774"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect width=".013%" height="15" x="15.002%" y="325" fill="#E18B12" fg:w="11" fg:x="12774"/></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect width=".012%" height="15" x="15.004%" y="309" fill="#E6890B" fg:w="10" fg:x="12775"/></g><g><title>datafusion-cli`&lt;datafusion_common::scalar::ScalarValue as core::convert::TryFrom&lt;&amp;arrow_schema::datatype::DataType&gt;&gt;::try_from (16 samples, 0.02%)</title><rect width=".019%" height="15" x="15.035%" y="325" fill="#D41C01" fg:w="16" fg:x="12802"/></g><g><title>datafusion-cli`&lt;datafusion_common::scalar::ScalarValue as core::convert::TryFrom&lt;&amp;arrow_schema::datatype::DataType&gt;&gt;::try_from (9 samples, 0.01%)</title><rect width=".011%" height="15" x="15.06%" y="309" fill="#F8A411" fg:w="9" fg:x="12823"/></g><g><title>datafusion-cli`_mi_page_free (37 samples, 0.04%)</title><rect width=".043%" height="15" x="15.075%" y="261" fill="#DEAB2A" fg:w="37" fg:x="12836"/></g><g><title>datafusion-cli`mi_segment_page_clear (37 samples, 0.04%)</title><rect width=".043%" height="15" x="15.075%" y="245" fill="#F3542D" fg:w="37" fg:x="12836"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (37 samples, 0.04%)</title><rect width=".043%" height="15" x="15.075%" y="229" fill="#FC3117" fg:w="37" fg:x="12836"/></g><g><title>datafusion-cli`mi_segment_span_free (36 samples, 0.04%)</title><rect width=".042%" height="15" x="15.076%" y="213" fill="#D71307" fg:w="36" fg:x="12837"/></g><g><title>datafusion-cli`mi_segment_try_purge (36 samples, 0.04%)</title><rect width=".042%" height="15" x="15.076%" y="197" fill="#EE5129" fg:w="36" fg:x="12837"/></g><g><title>datafusion-cli`mi_segment_purge (36 samples, 0.04%)</title><rect width=".042%" height="15" x="15.076%" y="181" fill="#D2C725" fg:w="36" fg:x="12837"/></g><g><title>libsystem_kernel.dylib`madvise (36 samples, 0.04%)</title><rect width=".042%" height="15" x="15.076%" y="165" fill="#F4C031" fg:w="36" fg:x="12837"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (41 samples, 0.05%)</title><rect width=".048%" height="15" x="15.072%" y="309" fill="#E2D30B" fg:w="41" fg:x="12833"/></g><g><title>datafusion-cli`_mi_malloc_generic (41 samples, 0.05%)</title><rect width=".048%" height="15" x="15.072%" y="293" fill="#ECA236" fg:w="41" fg:x="12833"/></g><g><title>datafusion-cli`mi_find_page (39 samples, 0.05%)</title><rect width=".046%" height="15" x="15.074%" y="277" fill="#DCE509" fg:w="39" fg:x="12835"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::Min as datafusion_expr::udaf::AggregateUDFImpl&gt;::accumulator (64 samples, 0.08%)</title><rect width=".075%" height="15" x="15.054%" y="325" fill="#FA5716" fg:w="64" fg:x="12818"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter::make_accumulators_if_needed (135 samples, 0.16%)</title><rect width=".159%" height="15" x="14.973%" y="357" fill="#EF2B11" fg:w="135" fg:x="12749"/></g><g><title>datafusion-cli`datafusion_physical_expr::aggregate::AggregateFunctionExpr::create_accumulator (89 samples, 0.10%)</title><rect width=".104%" height="15" x="15.027%" y="341" fill="#E7B119" fg:w="89" fg:x="12795"/></g><g><title>datafusion-cli`arrow_buffer::buffer::immutable::Buffer::slice_with_length (9 samples, 0.01%)</title><rect width=".011%" height="15" x="15.203%" y="309" fill="#DBB301" fg:w="9" fg:x="12945"/></g><g><title>datafusion-cli`arrow_buffer::buffer::scalar::ScalarBuffer&lt;T&gt;::new (10 samples, 0.01%)</title><rect width=".012%" height="15" x="15.214%" y="309" fill="#EEDB35" fg:w="10" fg:x="12954"/></g><g><title>datafusion-cli`mi_malloc_aligned (27 samples, 0.03%)</title><rect width=".032%" height="15" x="15.235%" y="309" fill="#E8A724" fg:w="27" fg:x="12972"/></g><g><title>datafusion-cli`&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as arrow_array::array::Array&gt;::slice (92 samples, 0.11%)</title><rect width=".108%" height="15" x="15.163%" y="325" fill="#F41333" fg:w="92" fg:x="12911"/></g><g><title>datafusion-cli`mi_malloc_aligned (12 samples, 0.01%)</title><rect width=".014%" height="15" x="15.278%" y="325" fill="#E00616" fg:w="12" fg:x="13009"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (123 samples, 0.14%)</title><rect width=".144%" height="15" x="15.15%" y="341" fill="#E09105" fg:w="123" fg:x="12900"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::slice_and_maybe_filter (142 samples, 0.17%)</title><rect width=".167%" height="15" x="15.132%" y="357" fill="#EA8231" fg:w="142" fg:x="12884"/></g><g><title>datafusion-cli`mi_free (20 samples, 0.02%)</title><rect width=".024%" height="15" x="15.298%" y="357" fill="#FE0602" fg:w="20" fg:x="13026"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::update_batch (3,755 samples, 4.41%)</title><rect width="4.41%" height="15" x="11.032%" y="373" fill="#D0602E" fg:w="3755" fg:x="9393"/><text x="11.282%" y="383.5">dataf..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.11%)</title><rect width=".113%" height="15" x="15.329%" y="357" fill="#EF0327" fg:w="96" fg:x="13052"/></g><g><title>datafusion-cli`DYLD-STUB$$memcmp (19 samples, 0.02%)</title><rect width=".022%" height="15" x="15.451%" y="357" fill="#E9D201" fg:w="19" fg:x="13156"/></g><g><title>datafusion-cli`&lt;hashbrown::raw::inner::RawTable&lt;T&gt; as datafusion_common::utils::proxy::RawTableAllocExt&gt;::insert_accounted (65 samples, 0.08%)</title><rect width=".076%" height="15" x="16.339%" y="341" fill="#F48925" fg:w="65" fg:x="13912"/></g><g><title>datafusion-cli`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (46 samples, 0.05%)</title><rect width=".054%" height="15" x="16.361%" y="325" fill="#F08802" fg:w="46" fg:x="13931"/></g><g><title>datafusion-cli`&lt;str as datafusion_common::hash_utils::HashValue&gt;::hash_one (424 samples, 0.50%)</title><rect width=".498%" height="15" x="16.415%" y="341" fill="#EF1225" fg:w="424" fg:x="13977"/></g><g><title>datafusion-cli`mi_heap_realloc_zero_aligned_at (9 samples, 0.01%)</title><rect width=".011%" height="15" x="16.916%" y="325" fill="#DAB916" fg:w="9" fg:x="14403"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (53 samples, 0.06%)</title><rect width=".062%" height="15" x="16.916%" y="341" fill="#E1DA04" fg:w="53" fg:x="14403"/></g><g><title>libsystem_platform.dylib`_platform_memmove (44 samples, 0.05%)</title><rect width=".052%" height="15" x="16.926%" y="325" fill="#E6B620" fg:w="44" fg:x="14412"/></g><g><title>datafusion-cli`datafusion_physical_expr_common::binary_map::ArrowBytesMap&lt;O,V&gt;::insert_if_new (1,298 samples, 1.52%)</title><rect width="1.524%" height="15" x="15.475%" y="357" fill="#F2382B" fg:w="1298" fg:x="13176"/></g><g><title>datafusion-cli`datafusion_common::hash_utils::create_hashes (18 samples, 0.02%)</title><rect width=".021%" height="15" x="16.978%" y="341" fill="#E96318" fg:w="18" fg:x="14456"/></g><g><title>libsystem_platform.dylib`_platform_memcmp (381 samples, 0.45%)</title><rect width=".448%" height="15" x="17.005%" y="357" fill="#EAD12A" fg:w="381" fg:x="14479"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::aggregates::group_values::bytes::GroupValuesByes&lt;O&gt; as datafusion_physical_plan::aggregates::group_values::GroupValues&gt;::intern (1,777 samples, 2.09%)</title><rect width="2.087%" height="15" x="15.442%" y="373" fill="#E3070C" fg:w="1777" fg:x="13148"/><text x="15.692%" y="383.5">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (65 samples, 0.08%)</title><rect width=".076%" height="15" x="17.452%" y="357" fill="#F5CB2B" fg:w="65" fg:x="14860"/></g><g><title>datafusion-cli`&lt;parquet::format::ColumnChunk as parquet::thrift::TSerializable&gt;::read_from_in_protocol (18 samples, 0.02%)</title><rect width=".021%" height="15" x="17.536%" y="245" fill="#EECD21" fg:w="18" fg:x="14931"/></g><g><title>datafusion-cli`&lt;parquet::format::FileMetaData as parquet::thrift::TSerializable&gt;::read_from_in_protocol (25 samples, 0.03%)</title><rect width=".029%" height="15" x="17.535%" y="261" fill="#E73807" fg:w="25" fg:x="14930"/></g><g><title>datafusion-cli`&lt;parquet::arrow::async_reader::store::ParquetObjectReader as parquet::arrow::async_reader::AsyncFileReader&gt;::get_metadata::_{{closure}} (43 samples, 0.05%)</title><rect width=".051%" height="15" x="17.53%" y="293" fill="#F4BA1D" fg:w="43" fg:x="14926"/></g><g><title>datafusion-cli`parquet::file::footer::decode_metadata (39 samples, 0.05%)</title><rect width=".046%" height="15" x="17.535%" y="277" fill="#EA6F1F" fg:w="39" fg:x="14930"/></g><g><title>datafusion-cli`&lt;datafusion::datasource::physical_plan::parquet::opener::ParquetOpener as datafusion::datasource::physical_plan::file_stream::FileOpener&gt;::open::_{{closure}} (54 samples, 0.06%)</title><rect width=".063%" height="15" x="17.53%" y="309" fill="#F1950A" fg:w="54" fg:x="14926"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.07%)</title><rect width=".069%" height="15" x="17.705%" y="165" fill="#F9CE2C" fg:w="59" fg:x="15075"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (58 samples, 0.07%)</title><rect width=".068%" height="15" x="17.706%" y="149" fill="#FB991E" fg:w="58" fg:x="15076"/></g><g><title>libsystem_platform.dylib`_platform_memmove (51 samples, 0.06%)</title><rect width=".06%" height="15" x="17.714%" y="133" fill="#EF9826" fg:w="51" fg:x="15083"/></g><g><title>datafusion-cli`parquet::arrow::buffer::offset_buffer::OffsetBuffer&lt;I&gt;::try_push (202 samples, 0.24%)</title><rect width=".237%" height="15" x="17.774%" y="165" fill="#F98B2F" fg:w="202" fg:x="15134"/></g><g><title>datafusion-cli`parquet::arrow::array_reader::byte_array::ByteArrayDecoderPlain::read (960 samples, 1.13%)</title><rect width="1.127%" height="15" x="17.612%" y="181" fill="#F44023" fg:w="960" fg:x="14996"/></g><g><title>libsystem_platform.dylib`_platform_memmove (620 samples, 0.73%)</title><rect width=".728%" height="15" x="18.011%" y="165" fill="#D82E0F" fg:w="620" fg:x="15336"/></g><g><title>datafusion-cli`parquet::arrow::buffer::offset_buffer::OffsetBuffer&lt;I&gt;::try_push (111 samples, 0.13%)</title><rect width=".13%" height="15" x="18.74%" y="181" fill="#FA4A13" fg:w="111" fg:x="15956"/></g><g><title>datafusion-cli`parquet::arrow::buffer::offset_buffer::OffsetBuffer&lt;I&gt;::extend_from_dictionary (90 samples, 0.11%)</title><rect width=".106%" height="15" x="18.872%" y="165" fill="#F92A21" fg:w="90" fg:x="16069"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49 samples, 0.06%)</title><rect width=".058%" height="15" x="18.92%" y="149" fill="#F29511" fg:w="49" fg:x="16110"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (49 samples, 0.06%)</title><rect width=".058%" height="15" x="18.92%" y="133" fill="#F41D15" fg:w="49" fg:x="16110"/></g><g><title>libsystem_platform.dylib`_platform_memmove (40 samples, 0.05%)</title><rect width=".047%" height="15" x="18.931%" y="117" fill="#DC8225" fg:w="40" fg:x="16119"/></g><g><title>datafusion-cli`parquet::encodings::rle::RleDecoder::get_batch (14 samples, 0.02%)</title><rect width=".016%" height="15" x="18.978%" y="165" fill="#D34302" fg:w="14" fg:x="16159"/></g><g><title>datafusion-cli`parquet::arrow::decoder::dictionary_index::DictIndexDecoder::read (266 samples, 0.31%)</title><rect width=".312%" height="15" x="18.87%" y="181" fill="#EB4434" fg:w="266" fg:x="16067"/></g><g><title>libsystem_platform.dylib`_platform_memmove (159 samples, 0.19%)</title><rect width=".187%" height="15" x="18.996%" y="165" fill="#F68E03" fg:w="159" fg:x="16174"/></g><g><title>datafusion-cli`parquet::arrow::array_reader::byte_array::ByteArrayDecoderPlain::read (44 samples, 0.05%)</title><rect width=".052%" height="15" x="19.182%" y="149" fill="#F11907" fg:w="44" fg:x="16333"/></g><g><title>libsystem_platform.dylib`_platform_memmove (33 samples, 0.04%)</title><rect width=".039%" height="15" x="19.195%" y="133" fill="#F27727" fg:w="33" fg:x="16344"/></g><g><title>datafusion-cli`&lt;parquet::arrow::array_reader::byte_array::ByteArrayColumnValueDecoder&lt;I&gt; as parquet::column::reader::decoder::ColumnValueDecoder&gt;::set_dict (46 samples, 0.05%)</title><rect width=".054%" height="15" x="19.182%" y="165" fill="#F1622D" fg:w="46" fg:x="16333"/></g><g><title>datafusion-cli`snap::decompress::Decoder::decompress (2,824 samples, 3.32%)</title><rect width="3.317%" height="15" x="19.241%" y="117" fill="#FE1C1E" fg:w="2824" fg:x="16383"/><text x="19.491%" y="127.5">dat..</text></g><g><title>datafusion-cli`&lt;parquet::compression::snappy_codec::SnappyCodec as parquet::compression::Codec&gt;::decompress (2,966 samples, 3.48%)</title><rect width="3.483%" height="15" x="19.241%" y="133" fill="#F18E36" fg:w="2966" fg:x="16383"/><text x="19.491%" y="143.5">dat..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (142 samples, 0.17%)</title><rect width=".167%" height="15" x="22.558%" y="117" fill="#DE550F" fg:w="142" fg:x="19207"/></g><g><title>datafusion-cli`parquet::file::serialized_reader::decode_page (3,024 samples, 3.55%)</title><rect width="3.551%" height="15" x="19.239%" y="149" fill="#D2552F" fg:w="3024" fg:x="16381"/><text x="19.489%" y="159.5">data..</text></g><g><title>libsystem_platform.dylib`__bzero (54 samples, 0.06%)</title><rect width=".063%" height="15" x="22.727%" y="133" fill="#E0CE19" fg:w="54" fg:x="19351"/></g><g><title>libsystem_platform.dylib`__bzero (32 samples, 0.04%)</title><rect width=".038%" height="15" x="22.801%" y="149" fill="#F3C913" fg:w="32" fg:x="19414"/></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.05%)</title><rect width=".051%" height="15" x="22.838%" y="149" fill="#EC3B04" fg:w="43" fg:x="19446"/></g><g><title>datafusion-cli`&lt;parquet::file::serialized_reader::SerializedPageReader&lt;R&gt; as parquet::column::page::PageReader&gt;::get_next_page (3,116 samples, 3.66%)</title><rect width="3.66%" height="15" x="19.236%" y="165" fill="#FEB32D" fg:w="3116" fg:x="16379"/><text x="19.486%" y="175.5">data..</text></g><g><title>datafusion-cli`parquet::column::reader::GenericColumnReader&lt;R,D,V&gt;::read_new_page (3,165 samples, 3.72%)</title><rect width="3.717%" height="15" x="19.182%" y="181" fill="#E20E0A" fg:w="3165" fg:x="16333"/><text x="19.432%" y="191.5">data..</text></g><g><title>datafusion-cli`&lt;parquet::arrow::arrow_reader::ParquetRecordBatchReader as core::iter::traits::iterator::Iterator&gt;::next (4,517 samples, 5.31%)</title><rect width="5.305%" height="15" x="17.597%" y="261" fill="#F41B29" fg:w="4517" fg:x="14983"/><text x="17.847%" y="271.5">datafu..</text></g><g><title>datafusion-cli`&lt;parquet::arrow::array_reader::struct_array::StructArrayReader as parquet::arrow::array_reader::ArrayReader&gt;::read_records (4,509 samples, 5.30%)</title><rect width="5.296%" height="15" x="17.606%" y="245" fill="#EB2320" fg:w="4509" fg:x="14991"/><text x="17.856%" y="255.5">datafu..</text></g><g><title>datafusion-cli`&lt;parquet::arrow::array_reader::byte_array::ByteArrayReader&lt;I&gt; as parquet::arrow::array_reader::ArrayReader&gt;::read_records (4,508 samples, 5.29%)</title><rect width="5.294%" height="15" x="17.607%" y="229" fill="#DA441F" fg:w="4508" fg:x="14992"/><text x="17.857%" y="239.5">datafu..</text></g><g><title>datafusion-cli`parquet::arrow::record_reader::GenericRecordReader&lt;V,CV&gt;::read_records (4,508 samples, 5.29%)</title><rect width="5.294%" height="15" x="17.607%" y="213" fill="#CF7825" fg:w="4508" fg:x="14992"/><text x="17.857%" y="223.5">datafu..</text></g><g><title>datafusion-cli`parquet::column::reader::GenericColumnReader&lt;R,D,V&gt;::read_records (4,508 samples, 5.29%)</title><rect width="5.294%" height="15" x="17.607%" y="197" fill="#E36200" fg:w="4508" fg:x="14992"/><text x="17.857%" y="207.5">datafu..</text></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;parquet::arrow::arrow_reader::ParquetRecordBatchReader&gt; (11 samples, 0.01%)</title><rect width=".013%" height="15" x="22.902%" y="261" fill="#CF0703" fg:w="11" fg:x="19500"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;parquet::arrow::array_reader::struct_array::StructArrayReader&gt; (11 samples, 0.01%)</title><rect width=".013%" height="15" x="22.902%" y="245" fill="#CE6213" fg:w="11" fg:x="19500"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect width=".013%" height="15" x="22.902%" y="229" fill="#D9051A" fg:w="11" fg:x="19500"/></g><g><title>datafusion-cli`&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,535 samples, 5.33%)</title><rect width="5.326%" height="15" x="17.593%" y="309" fill="#EBBE26" fg:w="4535" fg:x="14980"/><text x="17.843%" y="319.5">datafus..</text></g><g><title>datafusion-cli`&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,532 samples, 5.32%)</title><rect width="5.323%" height="15" x="17.597%" y="293" fill="#F75618" fg:w="4532" fg:x="14983"/><text x="17.847%" y="303.5">datafus..</text></g><g><title>datafusion-cli`&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (4,532 samples, 5.32%)</title><rect width="5.323%" height="15" x="17.597%" y="277" fill="#CD6510" fg:w="4532" fg:x="14983"/><text x="17.847%" y="287.5">datafus..</text></g><g><title>datafusion-cli`&lt;datafusion::datasource::physical_plan::file_stream::FileStream&lt;F&gt; as futures_core::stream::Stream&gt;::poll_next (4,596 samples, 5.40%)</title><rect width="5.398%" height="15" x="17.53%" y="325" fill="#F6A821" fg:w="4596" fg:x="14926"/><text x="17.78%" y="335.5">datafus..</text></g><g><title>datafusion-cli`DYLD-STUB$$memcmp (17 samples, 0.02%)</title><rect width=".02%" height="15" x="22.941%" y="245" fill="#E77201" fg:w="17" fg:x="19533"/></g><g><title>datafusion-cli`arrow_ord::cmp::apply_op (201 samples, 0.24%)</title><rect width=".236%" height="15" x="22.961%" y="245" fill="#CFB835" fg:w="201" fg:x="19550"/></g><g><title>datafusion-cli`arrow_ord::cmp::compare_op (253 samples, 0.30%)</title><rect width=".297%" height="15" x="22.938%" y="277" fill="#E05F33" fg:w="253" fg:x="19531"/></g><g><title>datafusion-cli`arrow_ord::cmp::compare_op::_{{closure}} (252 samples, 0.30%)</title><rect width=".296%" height="15" x="22.939%" y="261" fill="#D4BC2D" fg:w="252" fg:x="19532"/></g><g><title>libsystem_platform.dylib`_platform_memcmp (33 samples, 0.04%)</title><rect width=".039%" height="15" x="23.197%" y="245" fill="#DF9A26" fg:w="33" fg:x="19751"/></g><g><title>datafusion-cli`&lt;datafusion_physical_expr::expressions::binary::BinaryExpr as datafusion_physical_expr_common::physical_expr::PhysicalExpr&gt;::evaluate (260 samples, 0.31%)</title><rect width=".305%" height="15" x="22.931%" y="309" fill="#FB1634" fg:w="260" fg:x="19525"/></g><g><title>datafusion-cli`datafusion_physical_expr_common::datum::apply_cmp (258 samples, 0.30%)</title><rect width=".303%" height="15" x="22.933%" y="293" fill="#E5D116" fg:w="258" fg:x="19527"/></g><g><title>datafusion-cli`&lt;arrow_buffer::util::bit_iterator::BitIndexIterator as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect width=".019%" height="15" x="23.241%" y="229" fill="#EA8A22" fg:w="16" fg:x="19789"/></g><g><title>datafusion-cli`&lt;arrow_buffer::util::bit_iterator::BitSliceIterator as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect width=".018%" height="15" x="23.26%" y="229" fill="#D45F0B" fg:w="15" fg:x="19805"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (12 samples, 0.01%)</title><rect width=".014%" height="15" x="23.278%" y="229" fill="#F0B32F" fg:w="12" fg:x="19820"/></g><g><title>datafusion-cli`arrow_select::filter::FilterBytes&lt;OffsetSize&gt;::extend_idx (117 samples, 0.14%)</title><rect width=".137%" height="15" x="23.292%" y="229" fill="#F0A30B" fg:w="117" fg:x="19832"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (63 samples, 0.07%)</title><rect width=".074%" height="15" x="23.355%" y="213" fill="#EC250C" fg:w="63" fg:x="19886"/></g><g><title>libsystem_platform.dylib`_platform_memmove (58 samples, 0.07%)</title><rect width=".068%" height="15" x="23.361%" y="197" fill="#E8A410" fg:w="58" fg:x="19891"/></g><g><title>datafusion-cli`mi_heap_realloc_zero_aligned_at (15 samples, 0.02%)</title><rect width=".018%" height="15" x="23.591%" y="197" fill="#F4CD0F" fg:w="15" fg:x="20087"/></g><g><title>datafusion-cli`arrow_select::filter::FilterBytes&lt;OffsetSize&gt;::extend_slices (336 samples, 0.39%)</title><rect width=".395%" height="15" x="23.429%" y="229" fill="#DF752F" fg:w="336" fg:x="19949"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (199 samples, 0.23%)</title><rect width=".234%" height="15" x="23.59%" y="213" fill="#F46B23" fg:w="199" fg:x="20086"/></g><g><title>libsystem_platform.dylib`_platform_memmove (182 samples, 0.21%)</title><rect width=".214%" height="15" x="23.61%" y="197" fill="#CD8C08" fg:w="182" fg:x="20103"/></g><g><title>datafusion-cli`datafusion_physical_plan::filter::filter_and_project (1,154 samples, 1.36%)</title><rect width="1.355%" height="15" x="22.93%" y="325" fill="#E4542E" fg:w="1154" fg:x="19524"/></g><g><title>datafusion-cli`arrow_select::filter::filter_record_batch (892 samples, 1.05%)</title><rect width="1.048%" height="15" x="23.238%" y="309" fill="#FEBC09" fg:w="892" fg:x="19786"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (891 samples, 1.05%)</title><rect width="1.046%" height="15" x="23.239%" y="293" fill="#CE7036" fg:w="891" fg:x="19787"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (890 samples, 1.05%)</title><rect width="1.045%" height="15" x="23.24%" y="277" fill="#D85431" fg:w="890" fg:x="19788"/></g><g><title>datafusion-cli`arrow_select::filter::filter_array (890 samples, 1.05%)</title><rect width="1.045%" height="15" x="23.24%" y="261" fill="#D6C223" fg:w="890" fg:x="19788"/></g><g><title>datafusion-cli`arrow_select::filter::filter_bytes (889 samples, 1.04%)</title><rect width="1.044%" height="15" x="23.241%" y="245" fill="#F91C03" fg:w="889" fg:x="19789"/></g><g><title>libsystem_platform.dylib`_platform_memmove (393 samples, 0.46%)</title><rect width=".462%" height="15" x="23.824%" y="229" fill="#DE3834" fg:w="393" fg:x="20285"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::filter::FilterExecStream as futures_core::stream::Stream&gt;::poll_next (5,753 samples, 6.76%)</title><rect width="6.757%" height="15" x="17.53%" y="341" fill="#F5D932" fg:w="5753" fg:x="14926"/><text x="17.78%" y="351.5">datafusio..</text></g><g><title>datafusion-cli`arrow_data::transform::variable_size::build_extend::_{{closure}} (62 samples, 0.07%)</title><rect width=".073%" height="15" x="24.289%" y="261" fill="#D5C918" fg:w="62" fg:x="20681"/></g><g><title>datafusion-cli`arrow_data::transform::utils::extend_offsets (62 samples, 0.07%)</title><rect width=".073%" height="15" x="24.289%" y="245" fill="#F8741C" fg:w="62" fg:x="20681"/></g><g><title>datafusion-cli`arrow_data::transform::MutableArrayData::extend (227 samples, 0.27%)</title><rect width=".267%" height="15" x="24.289%" y="277" fill="#DB482B" fg:w="227" fg:x="20681"/></g><g><title>libsystem_platform.dylib`_platform_memmove (165 samples, 0.19%)</title><rect width=".194%" height="15" x="24.362%" y="261" fill="#D18A0E" fg:w="165" fg:x="20743"/></g><g><title>datafusion-cli`arrow_select::concat::concat_batches (232 samples, 0.27%)</title><rect width=".273%" height="15" x="24.288%" y="325" fill="#DE1221" fg:w="232" fg:x="20680"/></g><g><title>datafusion-cli`arrow_select::concat::concat (231 samples, 0.27%)</title><rect width=".271%" height="15" x="24.289%" y="309" fill="#D5C707" fg:w="231" fg:x="20681"/></g><g><title>datafusion-cli`arrow_select::concat::concat_fallback (231 samples, 0.27%)</title><rect width=".271%" height="15" x="24.289%" y="293" fill="#FA6E0A" fg:w="231" fg:x="20681"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::coalesce_batches::CoalesceBatchesStream as futures_core::stream::Stream&gt;::poll_next (5,987 samples, 7.03%)</title><rect width="7.032%" height="15" x="17.53%" y="357" fill="#F87B06" fg:w="5987" fg:x="14926"/><text x="17.78%" y="367.5">datafusio..</text></g><g><title>datafusion-cli`datafusion_physical_plan::coalesce::BatchCoalescer::finish_batch (233 samples, 0.27%)</title><rect width=".274%" height="15" x="24.288%" y="341" fill="#CE5B1F" fg:w="233" fg:x="20680"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,376 samples, 1.62%)</title><rect width="1.616%" height="15" x="24.561%" y="325" fill="#D39A0D" fg:w="1376" fg:x="20913"/></g><g><title>datafusion-cli`&lt;datafusion_physical_expr::expressions::cast::CastExpr as datafusion_physical_expr_common::physical_expr::PhysicalExpr&gt;::evaluate (1,376 samples, 1.62%)</title><rect width="1.616%" height="15" x="24.561%" y="309" fill="#E19407" fg:w="1376" fg:x="20913"/></g><g><title>datafusion-cli`datafusion_expr_common::columnar_value::ColumnarValue::cast_to (1,376 samples, 1.62%)</title><rect width="1.616%" height="15" x="24.561%" y="293" fill="#DCA02B" fg:w="1376" fg:x="20913"/></g><g><title>datafusion-cli`arrow_cast::cast::string::cast_binary_to_string (1,376 samples, 1.62%)</title><rect width="1.616%" height="15" x="24.561%" y="277" fill="#D53427" fg:w="1376" fg:x="20913"/></g><g><title>datafusion-cli`arrow_array::array::string_array::_&lt;impl arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericStringType&lt;OffsetSize&gt;&gt;&gt;::try_from_binary (1,375 samples, 1.61%)</title><rect width="1.615%" height="15" x="24.563%" y="261" fill="#F38907" fg:w="1375" fg:x="20914"/></g><g><title>datafusion-cli`&lt;arrow_array::types::GenericStringType&lt;O&gt; as arrow_array::types::ByteArrayType&gt;::validate (1,375 samples, 1.61%)</title><rect width="1.615%" height="15" x="24.563%" y="245" fill="#E64F0D" fg:w="1375" fg:x="20914"/></g><g><title>datafusion-cli`core::str::converts::from_utf8 (1,316 samples, 1.55%)</title><rect width="1.546%" height="15" x="24.632%" y="229" fill="#F76917" fg:w="1316" fg:x="20973"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::projection::ProjectionStream as futures_core::stream::Stream&gt;::poll_next (7,365 samples, 8.65%)</title><rect width="8.65%" height="15" x="17.53%" y="373" fill="#DFB329" fg:w="7365" fg:x="14926"/><text x="17.78%" y="383.5">datafusion-c..</text></g><g><title>datafusion-cli`core::iter::adapters::try_process (1,378 samples, 1.62%)</title><rect width="1.618%" height="15" x="24.561%" y="357" fill="#DA0922" fg:w="1378" fg:x="20913"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,378 samples, 1.62%)</title><rect width="1.618%" height="15" x="24.561%" y="341" fill="#DE6A08" fg:w="1378" fg:x="20913"/></g><g><title>datafusion-cli`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (254 samples, 0.30%)</title><rect width=".298%" height="15" x="26.372%" y="181" fill="#D3DC00" fg:w="254" fg:x="22455"/></g><g><title>datafusion-cli`core::str::count::char_count_general_case (90 samples, 0.11%)</title><rect width=".106%" height="15" x="26.671%" y="181" fill="#E53410" fg:w="90" fg:x="22709"/></g><g><title>datafusion-cli`core::str::count::do_count_chars (1,371 samples, 1.61%)</title><rect width="1.61%" height="15" x="26.776%" y="181" fill="#D49B12" fg:w="1371" fg:x="22799"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,878 samples, 2.21%)</title><rect width="2.206%" height="15" x="26.196%" y="197" fill="#F2150E" fg:w="1878" fg:x="22305"/><text x="26.446%" y="207.5">d..</text></g><g><title>datafusion-cli`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41 samples, 0.05%)</title><rect width=".048%" height="15" x="28.402%" y="197" fill="#DE1330" fg:w="41" fg:x="24183"/></g><g><title>datafusion-cli`&lt;arrow_buffer::buffer::immutable::Buffer as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,929 samples, 2.27%)</title><rect width="2.265%" height="15" x="26.196%" y="213" fill="#E82D1B" fg:w="1929" fg:x="22305"/><text x="26.446%" y="223.5">d..</text></g><g><title>datafusion-cli`&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;Ptr&gt;&gt;::from_iter (1,932 samples, 2.27%)</title><rect width="2.269%" height="15" x="26.196%" y="229" fill="#F9672A" fg:w="1932" fg:x="22305"/><text x="26.446%" y="239.5">d..</text></g><g><title>datafusion-cli`&lt;datafusion_functions::unicode::character_length::CharacterLengthFunc as datafusion_expr::udf::ScalarUDFImpl&gt;::invoke (1,935 samples, 2.27%)</title><rect width="2.273%" height="15" x="26.194%" y="261" fill="#F65121" fg:w="1935" fg:x="22303"/><text x="26.444%" y="271.5">d..</text></g><g><title>datafusion-cli`datafusion_functions::utils::make_scalar_function::_{{closure}} (1,935 samples, 2.27%)</title><rect width="2.273%" height="15" x="26.194%" y="245" fill="#FC212A" fg:w="1935" fg:x="22303"/><text x="26.444%" y="255.5">d..</text></g><g><title>datafusion-cli`&lt;datafusion_physical_expr::scalar_function::ScalarFunctionExpr as datafusion_physical_expr_common::physical_expr::PhysicalExpr&gt;::evaluate (1,937 samples, 2.27%)</title><rect width="2.275%" height="15" x="26.194%" y="277" fill="#D1D429" fg:w="1937" fg:x="22303"/><text x="26.444%" y="287.5">d..</text></g><g><title>datafusion-cli`arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt;::try_unary (24 samples, 0.03%)</title><rect width=".028%" height="15" x="28.472%" y="245" fill="#CF9A06" fg:w="24" fg:x="24243"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (18 samples, 0.02%)</title><rect width=".021%" height="15" x="28.479%" y="229" fill="#DF402F" fg:w="18" fg:x="24249"/></g><g><title>datafusion-cli`_mi_malloc_generic (18 samples, 0.02%)</title><rect width=".021%" height="15" x="28.479%" y="213" fill="#D3A126" fg:w="18" fg:x="24249"/></g><g><title>datafusion-cli`mi_find_page (16 samples, 0.02%)</title><rect width=".019%" height="15" x="28.482%" y="197" fill="#DB8A28" fg:w="16" fg:x="24251"/></g><g><title>datafusion-cli`_mi_page_free (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="181" fill="#F1E42E" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`mi_segment_page_clear (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="165" fill="#DFD126" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="149" fill="#ECA42D" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`mi_segment_span_free (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="133" fill="#E70F05" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`mi_segment_try_purge (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="117" fill="#FC230F" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`mi_segment_purge (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="101" fill="#F8B512" fg:w="15" fg:x="24252"/></g><g><title>libsystem_kernel.dylib`madvise (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.483%" y="85" fill="#E9272A" fg:w="15" fg:x="24252"/></g><g><title>datafusion-cli`arrow_cast::cast::cast_numeric_arrays (36 samples, 0.04%)</title><rect width=".042%" height="15" x="28.471%" y="261" fill="#EE6E21" fg:w="36" fg:x="24242"/></g><g><title>libsystem_platform.dylib`__bzero (11 samples, 0.01%)</title><rect width=".013%" height="15" x="28.5%" y="245" fill="#E9C30A" fg:w="11" fg:x="24267"/></g><g><title>datafusion-cli`&lt;datafusion_physical_expr::expressions::cast::CastExpr as datafusion_physical_expr_common::physical_expr::PhysicalExpr&gt;::evaluate (1,979 samples, 2.32%)</title><rect width="2.324%" height="15" x="26.194%" y="293" fill="#FE6903" fg:w="1979" fg:x="22303"/><text x="26.444%" y="303.5">d..</text></g><g><title>datafusion-cli`datafusion_expr_common::columnar_value::ColumnarValue::cast_to (40 samples, 0.05%)</title><rect width=".047%" height="15" x="28.471%" y="277" fill="#DDE109" fg:w="40" fg:x="24242"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,994 samples, 2.34%)</title><rect width="2.342%" height="15" x="26.194%" y="309" fill="#E0E32D" fg:w="1994" fg:x="22303"/><text x="26.444%" y="319.5">d..</text></g><g><title>datafusion-cli`datafusion_expr_common::columnar_value::ColumnarValue::into_array (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.518%" y="293" fill="#E5C62B" fg:w="15" fg:x="24282"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::to_array_of_size (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.518%" y="277" fill="#CED123" fg:w="15" fg:x="24282"/></g><g><title>datafusion-cli`arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt;::from_value (15 samples, 0.02%)</title><rect width=".018%" height="15" x="28.518%" y="261" fill="#F5C335" fg:w="15" fg:x="24282"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,995 samples, 2.34%)</title><rect width="2.343%" height="15" x="26.194%" y="357" fill="#F05C1A" fg:w="1995" fg:x="22303"/><text x="26.444%" y="367.5">d..</text></g><g><title>datafusion-cli`core::iter::adapters::try_process (1,995 samples, 2.34%)</title><rect width="2.343%" height="15" x="26.194%" y="341" fill="#CF2817" fg:w="1995" fg:x="22303"/><text x="26.444%" y="351.5">d..</text></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,995 samples, 2.34%)</title><rect width="2.343%" height="15" x="26.194%" y="325" fill="#DF6F23" fg:w="1995" fg:x="22303"/><text x="26.444%" y="335.5">d..</text></g><g><title>datafusion-cli`core::iter::adapters::try_process (1,996 samples, 2.34%)</title><rect width="2.344%" height="15" x="26.194%" y="373" fill="#E5931C" fg:w="1996" fg:x="22303"/><text x="26.444%" y="383.5">d..</text></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericStringType&lt;i32&gt;&gt;&gt; (9 samples, 0.01%)</title><rect width=".011%" height="15" x="28.542%" y="341" fill="#D31D1C" fg:w="9" fg:x="24302"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.01%)</title><rect width=".011%" height="15" x="28.542%" y="325" fill="#E44821" fg:w="9" fg:x="24302"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (16 samples, 0.02%)</title><rect width=".019%" height="15" x="28.538%" y="373" fill="#CDD61F" fg:w="16" fg:x="24299"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.02%)</title><rect width=".016%" height="15" x="28.54%" y="357" fill="#E06F0F" fg:w="14" fg:x="24301"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::size (17 samples, 0.02%)</title><rect width=".02%" height="15" x="28.565%" y="373" fill="#FD151A" fg:w="17" fg:x="24322"/></g><g><title>datafusion-cli`datafusion_functions_aggregate_common::aggregate::groups_accumulator::slice_and_maybe_filter (19 samples, 0.02%)</title><rect width=".022%" height="15" x="28.586%" y="373" fill="#F58B2B" fg:w="19" fg:x="24340"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (28 samples, 0.03%)</title><rect width=".033%" height="15" x="28.616%" y="261" fill="#FCAA07" fg:w="28" fg:x="24365"/></g><g><title>datafusion-cli`__rust_dealloc (11 samples, 0.01%)</title><rect width=".013%" height="15" x="28.648%" y="261" fill="#E7760E" fg:w="11" fg:x="24393"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (132 samples, 0.16%)</title><rect width=".155%" height="15" x="28.666%" y="229" fill="#EE5300" fg:w="132" fg:x="24408"/></g><g><title>datafusion-cli`arrow_data::data::ArrayDataBuilder::build (452 samples, 0.53%)</title><rect width=".531%" height="15" x="28.665%" y="261" fill="#DD2727" fg:w="452" fg:x="24407"/></g><g><title>datafusion-cli`arrow_data::data::ArrayData::validate_values (452 samples, 0.53%)</title><rect width=".531%" height="15" x="28.665%" y="245" fill="#DE772E" fg:w="452" fg:x="24407"/></g><g><title>datafusion-cli`core::str::converts::from_utf8 (319 samples, 0.37%)</title><rect width=".375%" height="15" x="28.821%" y="229" fill="#DEA531" fg:w="319" fg:x="24540"/></g><g><title>datafusion-cli`&lt;&amp;str as regex::regex::string::Replacer&gt;::no_expansion (50 samples, 0.06%)</title><rect width=".059%" height="15" x="29.499%" y="245" fill="#DB7134" fg:w="50" fg:x="25117"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.13%)</title><rect width=".132%" height="15" x="29.56%" y="245" fill="#D6070F" fg:w="112" fg:x="25169"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (28 samples, 0.03%)</title><rect width=".033%" height="15" x="29.691%" y="245" fill="#EB2004" fg:w="28" fg:x="25281"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;core::iter::adapters::enumerate::Enumerate&lt;regex::regex::string::CaptureMatches&gt;&gt;&gt; (25 samples, 0.03%)</title><rect width=".029%" height="15" x="29.727%" y="245" fill="#EE5A36" fg:w="25" fg:x="25311"/></g><g><title>datafusion-cli`mi_free (112 samples, 0.13%)</title><rect width=".132%" height="15" x="29.756%" y="245" fill="#D5D013" fg:w="112" fg:x="25336"/></g><g><title>datafusion-cli`&lt;&amp;str as regex::regex::string::Replacer&gt;::no_expansion (24 samples, 0.03%)</title><rect width=".028%" height="15" x="31.334%" y="229" fill="#E99C04" fg:w="24" fg:x="26680"/></g><g><title>datafusion-cli`regex_automata::util::determinize::next (16 samples, 0.02%)</title><rect width=".019%" height="15" x="41.357%" y="149" fill="#CFC205" fg:w="16" fg:x="35214"/></g><g><title>datafusion-cli`regex_automata::hybrid::dfa::Lazy::cache_next_state (37 samples, 0.04%)</title><rect width=".043%" height="15" x="41.334%" y="165" fill="#CE6F1E" fg:w="37" fg:x="35194"/></g><g><title>datafusion-cli`regex_automata::hybrid::regex::Regex::try_search (7,837 samples, 9.20%)</title><rect width="9.204%" height="15" x="32.175%" y="197" fill="#F34636" fg:w="7837" fg:x="27396"/><text x="32.425%" y="207.5">datafusion-cl..</text></g><g><title>datafusion-cli`regex_automata::hybrid::search::find_fwd (7,526 samples, 8.84%)</title><rect width="8.839%" height="15" x="32.541%" y="181" fill="#F21C08" fg:w="7526" fg:x="27707"/><text x="32.791%" y="191.5">datafusion-c..</text></g><g><title>datafusion-cli`regex_automata::hybrid::search::find_fwd (93 samples, 0.11%)</title><rect width=".109%" height="15" x="41.38%" y="197" fill="#DB6A12" fg:w="93" fg:x="35233"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (76 samples, 0.09%)</title><rect width=".089%" height="15" x="41.698%" y="165" fill="#F4DE0A" fg:w="76" fg:x="35504"/></g><g><title>datafusion-cli`DYLD-STUB$$bzero (46 samples, 0.05%)</title><rect width=".054%" height="15" x="41.911%" y="149" fill="#ECB334" fg:w="46" fg:x="35686"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (42,705 samples, 50.16%)</title><rect width="50.155%" height="15" x="41.966%" y="149" fill="#D51727" fg:w="42705" fg:x="35732"/><text x="42.216%" y="159.5">datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search..</text></g><g><title>libsystem_platform.dylib`__bzero (54 samples, 0.06%)</title><rect width=".063%" height="15" x="92.121%" y="149" fill="#EE300A" fg:w="54" fg:x="78437"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (43,651 samples, 51.27%)</title><rect width="51.266%" height="15" x="41.66%" y="181" fill="#FBC417" fg:w="43651" fg:x="35472"/><text x="41.91%" y="191.5">datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_sea..</text></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (43,543 samples, 51.14%)</title><rect width="51.139%" height="15" x="41.787%" y="165" fill="#FA9818" fg:w="43543" fg:x="35580"/><text x="42.037%" y="175.5">datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_sea..</text></g><g><title>libsystem_platform.dylib`_platform_memset (632 samples, 0.74%)</title><rect width=".742%" height="15" x="92.184%" y="149" fill="#D19611" fg:w="632" fg:x="78491"/></g><g><title>datafusion-cli`regex_automata::meta::strategy::Core::search_slots_nofail (43,848 samples, 51.50%)</title><rect width="51.497%" height="15" x="41.489%" y="197" fill="#EACA22" fg:w="43848" fg:x="35326"/><text x="41.739%" y="207.5">datafusion-cli`regex_automata::meta::strategy::Core::search_slots_nofail</text></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (51 samples, 0.06%)</title><rect width=".06%" height="15" x="92.926%" y="181" fill="#FD9435" fg:w="51" fg:x="79123"/></g><g><title>datafusion-cli`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (51,998 samples, 61.07%)</title><rect width="61.069%" height="15" x="31.979%" y="213" fill="#DA8110" fg:w="51998" fg:x="27229"/><text x="32.229%" y="223.5">datafusion-cli`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::se..</text></g><g><title>datafusion-cli`regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (53 samples, 0.06%)</title><rect width=".062%" height="15" x="92.986%" y="197" fill="#D85513" fg:w="53" fg:x="79174"/></g><g><title>datafusion-cli`_mi_malloc_generic (12 samples, 0.01%)</title><rect width=".014%" height="15" x="93.052%" y="197" fill="#EBE407" fg:w="12" fg:x="79230"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (16 samples, 0.02%)</title><rect width=".019%" height="15" x="93.05%" y="213" fill="#F5AF00" fg:w="16" fg:x="79228"/></g><g><title>datafusion-cli`mi_malloc_aligned (108 samples, 0.13%)</title><rect width=".127%" height="15" x="93.068%" y="213" fill="#D0A824" fg:w="108" fg:x="79244"/></g><g><title>datafusion-cli`regex_automata::hybrid::regex::Regex::try_search (59 samples, 0.07%)</title><rect width=".069%" height="15" x="93.195%" y="213" fill="#F6AB18" fg:w="59" fg:x="79352"/></g><g><title>datafusion-cli`regex_automata::meta::strategy::Core::search_slots_nofail (24 samples, 0.03%)</title><rect width=".028%" height="15" x="93.264%" y="213" fill="#D78E18" fg:w="24" fg:x="79411"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (52,763 samples, 61.97%)</title><rect width="61.968%" height="15" x="31.363%" y="229" fill="#FABB07" fg:w="52763" fg:x="26704"/><text x="31.613%" y="239.5">datafusion-cli`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator..</text></g><g><title>libdyld.dylib`tlv_get_addr (32 samples, 0.04%)</title><rect width=".038%" height="15" x="93.293%" y="213" fill="#E44221" fg:w="32" fg:x="79435"/></g><g><title>datafusion-cli`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (57 samples, 0.07%)</title><rect width=".067%" height="15" x="93.33%" y="229" fill="#EAD715" fg:w="57" fg:x="79467"/></g><g><title>datafusion-cli`&lt;regex_automata::meta::strategy::ReverseAnchored as regex_automata::meta::strategy::Strategy&gt;::group_info (28 samples, 0.03%)</title><rect width=".033%" height="15" x="93.397%" y="229" fill="#DEBF14" fg:w="28" fg:x="79524"/></g><g><title>datafusion-cli`DYLD-STUB$$bzero (23 samples, 0.03%)</title><rect width=".027%" height="15" x="93.43%" y="229" fill="#F54F36" fg:w="23" fg:x="79552"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (14 samples, 0.02%)</title><rect width=".016%" height="15" x="93.457%" y="229" fill="#F00A25" fg:w="14" fg:x="79575"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;core::iter::adapters::enumerate::Enumerate&lt;regex::regex::string::CaptureMatches&gt;&gt;&gt; (158 samples, 0.19%)</title><rect width=".186%" height="15" x="93.476%" y="229" fill="#D6C020" fg:w="158" fg:x="79591"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::util::pool::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe+core::marker::Send&gt;&gt;&gt; (101 samples, 0.12%)</title><rect width=".119%" height="15" x="93.543%" y="213" fill="#D12436" fg:w="101" fg:x="79648"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::util::pool::PoolGuard&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe+core::marker::Send&gt;&gt;&gt; (92 samples, 0.11%)</title><rect width=".108%" height="15" x="93.662%" y="229" fill="#DC0A0B" fg:w="92" fg:x="79749"/></g><g><title>datafusion-cli`mi_free (95 samples, 0.11%)</title><rect width=".112%" height="15" x="93.769%" y="229" fill="#DD6A11" fg:w="95" fg:x="79841"/></g><g><title>datafusion-cli`_mi_free_delayed_block (34 samples, 0.04%)</title><rect width=".04%" height="15" x="93.899%" y="197" fill="#FB8E2C" fg:w="34" fg:x="79951"/></g><g><title>datafusion-cli`_mi_malloc_generic (62 samples, 0.07%)</title><rect width=".073%" height="15" x="93.889%" y="213" fill="#EE0D0F" fg:w="62" fg:x="79943"/></g><g><title>datafusion-cli`mi_find_page (19 samples, 0.02%)</title><rect width=".022%" height="15" x="93.94%" y="197" fill="#D06B1B" fg:w="19" fg:x="79986"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (77 samples, 0.09%)</title><rect width=".09%" height="15" x="93.881%" y="229" fill="#CD8825" fg:w="77" fg:x="79936"/></g><g><title>datafusion-cli`mi_malloc_aligned (125 samples, 0.15%)</title><rect width=".147%" height="15" x="93.972%" y="229" fill="#FACD1B" fg:w="125" fg:x="80013"/></g><g><title>datafusion-cli`regex::find_byte::find_byte (87 samples, 0.10%)</title><rect width=".102%" height="15" x="94.118%" y="229" fill="#D2502B" fg:w="87" fg:x="80138"/></g><g><title>datafusion-cli`regex_automata::meta::regex::Regex::create_captures (56 samples, 0.07%)</title><rect width=".066%" height="15" x="94.221%" y="229" fill="#F7A024" fg:w="56" fg:x="80225"/></g><g><title>datafusion-cli`_mi_malloc_generic (18 samples, 0.02%)</title><rect width=".021%" height="15" x="94.558%" y="197" fill="#EA0D31" fg:w="18" fg:x="80512"/></g><g><title>datafusion-cli`mi_find_page (9 samples, 0.01%)</title><rect width=".011%" height="15" x="94.568%" y="181" fill="#EA7A00" fg:w="9" fg:x="80521"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (21 samples, 0.02%)</title><rect width=".025%" height="15" x="94.556%" y="213" fill="#CF9226" fg:w="21" fg:x="80511"/></g><g><title>datafusion-cli`mi_malloc_aligned (135 samples, 0.16%)</title><rect width=".159%" height="15" x="94.581%" y="213" fill="#CFB119" fg:w="135" fg:x="80532"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::all (412 samples, 0.48%)</title><rect width=".484%" height="15" x="94.286%" y="229" fill="#D3B22A" fg:w="412" fg:x="80281"/></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.03%)</title><rect width=".03%" height="15" x="94.74%" y="213" fill="#E64536" fg:w="26" fg:x="80667"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (55 samples, 0.06%)</title><rect width=".065%" height="15" x="94.82%" y="213" fill="#D68729" fg:w="55" fg:x="80735"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::interpolate_string_into::_{{closure}} (48 samples, 0.06%)</title><rect width=".056%" height="15" x="94.884%" y="213" fill="#ED4319" fg:w="48" fg:x="80790"/></g><g><title>datafusion-cli`regex_automata::util::interpolate::find_cap_ref (74 samples, 0.09%)</title><rect width=".087%" height="15" x="94.941%" y="213" fill="#DEBD32" fg:w="74" fg:x="80838"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (13 samples, 0.02%)</title><rect width=".015%" height="15" x="95.265%" y="197" fill="#F59422" fg:w="13" fg:x="81114"/></g><g><title>datafusion-cli`core::num::_&lt;impl core::str::traits::FromStr for usize&gt;::from_str (32 samples, 0.04%)</title><rect width=".038%" height="15" x="95.28%" y="197" fill="#DE1D06" fg:w="32" fg:x="81127"/></g><g><title>datafusion-cli`core::str::converts::from_utf8 (15 samples, 0.02%)</title><rect width=".018%" height="15" x="95.317%" y="197" fill="#DDBD2B" fg:w="15" fg:x="81159"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::interpolate_string_into::_{{closure}} (154 samples, 0.18%)</title><rect width=".181%" height="15" x="95.335%" y="197" fill="#CF241B" fg:w="154" fg:x="81174"/></g><g><title>datafusion-cli`core::num::_&lt;impl core::str::traits::FromStr for usize&gt;::from_str (95 samples, 0.11%)</title><rect width=".112%" height="15" x="95.649%" y="181" fill="#D95A18" fg:w="95" fg:x="81441"/></g><g><title>datafusion-cli`regex_automata::util::interpolate::find_cap_ref (302 samples, 0.35%)</title><rect width=".355%" height="15" x="95.516%" y="197" fill="#E04223" fg:w="302" fg:x="81328"/></g><g><title>datafusion-cli`core::str::converts::from_utf8 (94 samples, 0.11%)</title><rect width=".11%" height="15" x="95.76%" y="181" fill="#DD0D32" fg:w="94" fg:x="81536"/></g><g><title>datafusion-cli`regex_automata::util::interpolate::string (1,197 samples, 1.41%)</title><rect width="1.406%" height="15" x="95.027%" y="213" fill="#EC4431" fg:w="1197" fg:x="80912"/></g><g><title>libsystem_platform.dylib`_platform_memmove (479 samples, 0.56%)</title><rect width=".563%" height="15" x="95.871%" y="197" fill="#E5921C" fg:w="479" fg:x="81630"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::interpolate_string_into (1,508 samples, 1.77%)</title><rect width="1.771%" height="15" x="94.77%" y="229" fill="#E11F26" fg:w="1508" fg:x="80693"/><text x="95.02%" y="239.5">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (92 samples, 0.11%)</title><rect width=".108%" height="15" x="96.433%" y="213" fill="#FAD003" fg:w="92" fg:x="82109"/></g><g><title>datafusion-cli`regex_automata::util::interpolate::string (62 samples, 0.07%)</title><rect width=".073%" height="15" x="96.541%" y="229" fill="#F63617" fg:w="62" fg:x="82201"/></g><g><title>datafusion-cli`regex_automata::hybrid::dfa::Cache::new (16 samples, 0.02%)</title><rect width=".019%" height="15" x="96.614%" y="197" fill="#F34C0B" fg:w="16" fg:x="82263"/></g><g><title>datafusion-cli`regex_automata::hybrid::dfa::Lazy::init_cache (15 samples, 0.02%)</title><rect width=".018%" height="15" x="96.615%" y="181" fill="#F51532" fg:w="15" fg:x="82264"/></g><g><title>datafusion-cli`regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (18 samples, 0.02%)</title><rect width=".021%" height="15" x="96.614%" y="229" fill="#E4092B" fg:w="18" fg:x="82263"/></g><g><title>datafusion-cli`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (18 samples, 0.02%)</title><rect width=".021%" height="15" x="96.614%" y="213" fill="#D0642F" fg:w="18" fg:x="82263"/></g><g><title>libdyld.dylib`tlv_get_addr (37 samples, 0.04%)</title><rect width=".043%" height="15" x="96.635%" y="229" fill="#E81A08" fg:w="37" fg:x="82281"/></g><g><title>libsystem_platform.dylib`__bzero (14 samples, 0.02%)</title><rect width=".016%" height="15" x="96.679%" y="229" fill="#D8A626" fg:w="14" fg:x="82318"/></g><g><title>libsystem_platform.dylib`_platform_memmove (215 samples, 0.25%)</title><rect width=".253%" height="15" x="96.695%" y="229" fill="#FBCA33" fg:w="215" fg:x="82332"/></g><g><title>datafusion-cli`regex::regex::string::Regex::replacen (57,245 samples, 67.23%)</title><rect width="67.232%" height="15" x="29.897%" y="245" fill="#FED822" fg:w="57245" fg:x="25456"/><text x="30.147%" y="255.5">datafusion-cli`regex::regex::string::Regex::replacen</text></g><g><title>libsystem_platform.dylib`_platform_memset (154 samples, 0.18%)</title><rect width=".181%" height="15" x="96.948%" y="229" fill="#FB201B" fg:w="154" fg:x="82547"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::all (116 samples, 0.14%)</title><rect width=".136%" height="15" x="97.138%" y="245" fill="#D07F1C" fg:w="116" fg:x="82709"/></g><g><title>datafusion-cli`regex_automata::util::captures::Captures::interpolate_string_into (40 samples, 0.05%)</title><rect width=".047%" height="15" x="97.274%" y="245" fill="#E08916" fg:w="40" fg:x="82825"/></g><g><title>libdyld.dylib`tlv_get_addr (41 samples, 0.05%)</title><rect width=".048%" height="15" x="97.321%" y="245" fill="#FE4620" fg:w="41" fg:x="82865"/></g><g><title>datafusion-cli`core::iter::traits::iterator::Iterator::fold (58,157 samples, 68.30%)</title><rect width="68.303%" height="15" x="29.2%" y="261" fill="#E54B25" fg:w="58157" fg:x="24863"/><text x="29.45%" y="271.5">datafusion-cli`core::iter::traits::iterator::Iterator::fold</text></g><g><title>libsystem_platform.dylib`_platform_memmove (114 samples, 0.13%)</title><rect width=".134%" height="15" x="97.369%" y="245" fill="#FC4017" fg:w="114" fg:x="82906"/></g><g><title>datafusion-cli`_mi_page_free (9 samples, 0.01%)</title><rect width=".011%" height="15" x="97.514%" y="213" fill="#E8A230" fg:w="9" fg:x="83029"/></g><g><title>datafusion-cli`mi_segment_page_clear (9 samples, 0.01%)</title><rect width=".011%" height="15" x="97.514%" y="197" fill="#F6A00C" fg:w="9" fg:x="83029"/></g><g><title>datafusion-cli`_mi_page_free (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="197" fill="#F7A600" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`mi_segment_page_clear (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="181" fill="#F9DB15" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="165" fill="#CDD103" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`mi_segment_span_free (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="149" fill="#F32C01" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`mi_segment_try_purge (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="133" fill="#CE9F10" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`mi_segment_purge (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="117" fill="#F44D1E" fg:w="10" fg:x="83044"/></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.531%" y="101" fill="#DA450C" fg:w="10" fg:x="83044"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::hybrid::dfa::Cache&gt; (17 samples, 0.02%)</title><rect width=".02%" height="15" x="97.524%" y="213" fill="#D45707" fg:w="17" fg:x="83038"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (28 samples, 0.03%)</title><rect width=".033%" height="15" x="97.513%" y="229" fill="#F57219" fg:w="28" fg:x="83028"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::panic::unwind_safe::RefUnwindSafe+core::marker::Send&gt;&gt;&gt; (36 samples, 0.04%)</title><rect width=".042%" height="15" x="97.505%" y="245" fill="#D23D2A" fg:w="36" fg:x="83022"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (38 samples, 0.04%)</title><rect width=".045%" height="15" x="97.504%" y="261" fill="#D33421" fg:w="38" fg:x="83021"/></g><g><title>datafusion-cli`mi_free (128 samples, 0.15%)</title><rect width=".15%" height="15" x="97.557%" y="261" fill="#EA3A21" fg:w="128" fg:x="83066"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (25 samples, 0.03%)</title><rect width=".029%" height="15" x="97.723%" y="197" fill="#DC7324" fg:w="25" fg:x="83207"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (24 samples, 0.03%)</title><rect width=".028%" height="15" x="97.724%" y="181" fill="#F39936" fg:w="24" fg:x="83208"/></g><g><title>datafusion-cli`regex_automata::meta::wrappers::Hybrid::new (11 samples, 0.01%)</title><rect width=".013%" height="15" x="97.753%" y="197" fill="#FB2F12" fg:w="11" fg:x="83233"/></g><g><title>datafusion-cli`regex_automata::dfa::onepass::Builder::build_from_nfa (10 samples, 0.01%)</title><rect width=".012%" height="15" x="97.766%" y="181" fill="#F2662A" fg:w="10" fg:x="83244"/></g><g><title>datafusion-cli`regex_automata::meta::wrappers::OnePass::new (14 samples, 0.02%)</title><rect width=".016%" height="15" x="97.766%" y="197" fill="#EA1F26" fg:w="14" fg:x="83244"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c (19 samples, 0.02%)</title><rect width=".022%" height="15" x="97.785%" y="133" fill="#DD7533" fg:w="19" fg:x="83260"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c (22 samples, 0.03%)</title><rect width=".026%" height="15" x="97.783%" y="165" fill="#D41412" fg:w="22" fg:x="83258"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (21 samples, 0.02%)</title><rect width=".025%" height="15" x="97.784%" y="149" fill="#F58524" fg:w="21" fg:x="83259"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (12 samples, 0.01%)</title><rect width=".014%" height="15" x="97.816%" y="133" fill="#D40613" fg:w="12" fg:x="83286"/></g><g><title>datafusion-cli`DYLD-STUB$$memcpy (32 samples, 0.04%)</title><rect width=".038%" height="15" x="97.844%" y="37" fill="#DA0124" fg:w="32" fg:x="83310"/></g><g><title>datafusion-cli`alloc::vec::Vec&lt;T,A&gt;::extend_with (27 samples, 0.03%)</title><rect width=".032%" height="15" x="97.881%" y="37" fill="#F65436" fg:w="27" fg:x="83342"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (128 samples, 0.15%)</title><rect width=".15%" height="15" x="97.843%" y="85" fill="#F26E06" fg:w="128" fg:x="83309"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (127 samples, 0.15%)</title><rect width=".149%" height="15" x="97.844%" y="69" fill="#D62F05" fg:w="127" fg:x="83310"/></g><g><title>datafusion-cli`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (127 samples, 0.15%)</title><rect width=".149%" height="15" x="97.844%" y="53" fill="#DA9F19" fg:w="127" fg:x="83310"/></g><g><title>libsystem_platform.dylib`_platform_memmove (67 samples, 0.08%)</title><rect width=".079%" height="15" x="97.914%" y="37" fill="#D7D31C" fg:w="67" fg:x="83370"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (180 samples, 0.21%)</title><rect width=".211%" height="15" x="97.783%" y="181" fill="#EE3B20" fg:w="180" fg:x="83258"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c_cap (158 samples, 0.19%)</title><rect width=".186%" height="15" x="97.808%" y="165" fill="#E25203" fg:w="158" fg:x="83280"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c (156 samples, 0.18%)</title><rect width=".183%" height="15" x="97.811%" y="149" fill="#F0A420" fg:w="156" fg:x="83282"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c_cap (140 samples, 0.16%)</title><rect width=".164%" height="15" x="97.83%" y="133" fill="#E82E07" fg:w="140" fg:x="83298"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (139 samples, 0.16%)</title><rect width=".163%" height="15" x="97.831%" y="117" fill="#E58135" fg:w="139" fg:x="83299"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::c (138 samples, 0.16%)</title><rect width=".162%" height="15" x="97.832%" y="101" fill="#EABC1D" fg:w="138" fg:x="83300"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::nfa::Inner::into_nfa (9 samples, 0.01%)</title><rect width=".011%" height="15" x="98.01%" y="165" fill="#F68D04" fg:w="9" fg:x="83452"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::builder::Builder::build (23 samples, 0.03%)</title><rect width=".027%" height="15" x="97.996%" y="181" fill="#E51727" fg:w="23" fg:x="83440"/></g><g><title>datafusion-cli`regex_automata::nfa::thompson::compiler::Compiler::compile (206 samples, 0.24%)</title><rect width=".242%" height="15" x="97.783%" y="197" fill="#CE0C03" fg:w="206" fg:x="83258"/></g><g><title>datafusion-cli`regex_automata::meta::strategy::new (259 samples, 0.30%)</title><rect width=".304%" height="15" x="97.722%" y="213" fill="#FCE214" fg:w="259" fg:x="83206"/></g><g><title>datafusion-cli`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (26 samples, 0.03%)</title><rect width=".03%" height="15" x="98.027%" y="197" fill="#D87B23" fg:w="26" fg:x="83466"/></g><g><title>datafusion-cli`regex_syntax::ast::parse::Parser::parse (28 samples, 0.03%)</title><rect width=".033%" height="15" x="98.026%" y="213" fill="#D44428" fg:w="28" fg:x="83465"/></g><g><title>datafusion-cli`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (18 samples, 0.02%)</title><rect width=".021%" height="15" x="98.063%" y="181" fill="#FE7D20" fg:w="18" fg:x="83497"/></g><g><title>datafusion-cli`regex_syntax::hir::translate::Translator::translate (23 samples, 0.03%)</title><rect width=".027%" height="15" x="98.059%" y="213" fill="#FD6116" fg:w="23" fg:x="83493"/></g><g><title>datafusion-cli`regex_syntax::ast::visitor::visit (23 samples, 0.03%)</title><rect width=".027%" height="15" x="98.059%" y="197" fill="#F1650E" fg:w="23" fg:x="83493"/></g><g><title>datafusion-cli`regex::regex::string::Regex::new (322 samples, 0.38%)</title><rect width=".378%" height="15" x="97.711%" y="261" fill="#EE671D" fg:w="322" fg:x="83197"/></g><g><title>datafusion-cli`regex::builders::Builder::build_one_string (322 samples, 0.38%)</title><rect width=".378%" height="15" x="97.711%" y="245" fill="#E9C32F" fg:w="322" fg:x="83197"/></g><g><title>datafusion-cli`regex_automata::meta::regex::Builder::build (321 samples, 0.38%)</title><rect width=".377%" height="15" x="97.712%" y="229" fill="#F6DA1E" fg:w="321" fg:x="83198"/></g><g><title>datafusion-cli`regex::regex::string::Regex::replacen (75 samples, 0.09%)</title><rect width=".088%" height="15" x="98.089%" y="261" fill="#DB912F" fg:w="75" fg:x="83519"/></g><g><title>datafusion-cli`datafusion_functions::regex::regexpreplace::regexp_replace_func (59,574 samples, 69.97%)</title><rect width="69.967%" height="15" x="28.614%" y="277" fill="#F30C1A" fg:w="59574" fg:x="24364"/><text x="28.864%" y="287.5">datafusion-cli`datafusion_functions::regex::regexpreplace::regexp_replace_func</text></g><g><title>libsystem_platform.dylib`_platform_memmove (344 samples, 0.40%)</title><rect width=".404%" height="15" x="98.177%" y="261" fill="#D65710" fg:w="344" fg:x="83594"/></g><g><title>datafusion-cli`&lt;datafusion_functions::regex::regexpreplace::RegexpReplaceFunc as datafusion_expr::udf::ScalarUDFImpl&gt;::invoke (59,576 samples, 69.97%)</title><rect width="69.969%" height="15" x="28.613%" y="293" fill="#D0632A" fg:w="59576" fg:x="24363"/><text x="28.863%" y="303.5">datafusion-cli`&lt;datafusion_functions::regex::regexpreplace::RegexpReplaceFunc as datafusion_expr::udf::ScalarUDFImpl..</text></g><g><title>datafusion-cli`&lt;datafusion_physical_expr::scalar_function::ScalarFunctionExpr as datafusion_physical_expr_common::physical_expr::PhysicalExpr&gt;::evaluate (59,578 samples, 69.97%)</title><rect width="69.972%" height="15" x="28.613%" y="309" fill="#FD6302" fg:w="59578" fg:x="24363"/><text x="28.863%" y="319.5">datafusion-cli`&lt;datafusion_physical_expr::scalar_function::ScalarFunctionExpr as datafusion_physical_expr_common::ph..</text></g><g><title>datafusion-cli`datafusion_physical_plan::aggregates::evaluate_group_by (59,583 samples, 69.98%)</title><rect width="69.978%" height="15" x="28.608%" y="373" fill="#DCA817" fg:w="59583" fg:x="24359"/><text x="28.858%" y="383.5">datafusion-cli`datafusion_physical_plan::aggregates::evaluate_group_by</text></g><g><title>datafusion-cli`core::iter::adapters::try_process (59,582 samples, 69.98%)</title><rect width="69.976%" height="15" x="28.61%" y="357" fill="#F22618" fg:w="59582" fg:x="24360"/><text x="28.86%" y="367.5">datafusion-cli`core::iter::adapters::try_process</text></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59,582 samples, 69.98%)</title><rect width="69.976%" height="15" x="28.61%" y="341" fill="#E1B609" fg:w="59582" fg:x="24360"/><text x="28.86%" y="351.5">datafusion-cli`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59,582 samples, 69.98%)</title><rect width="69.976%" height="15" x="28.61%" y="325" fill="#F3B225" fg:w="59582" fg:x="24360"/><text x="28.86%" y="335.5">datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold</text></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect width=".013%" height="15" x="98.646%" y="309" fill="#E88B13" fg:w="11" fg:x="83993"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (12 samples, 0.01%)</title><rect width=".014%" height="15" x="98.678%" y="277" fill="#E1C918" fg:w="12" fg:x="84020"/></g><g><title>datafusion-cli`_mi_malloc_generic (12 samples, 0.01%)</title><rect width=".014%" height="15" x="98.678%" y="261" fill="#DD2F2E" fg:w="12" fg:x="84020"/></g><g><title>datafusion-cli`mi_page_free_list_extend (9 samples, 0.01%)</title><rect width=".011%" height="15" x="98.681%" y="245" fill="#F9170D" fg:w="9" fg:x="84023"/></g><g><title>datafusion-cli`mi_malloc_aligned (13 samples, 0.02%)</title><rect width=".015%" height="15" x="98.692%" y="277" fill="#DB0905" fg:w="13" fg:x="84032"/></g><g><title>datafusion-cli`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.04%)</title><rect width=".043%" height="15" x="98.668%" y="293" fill="#FEAB10" fg:w="37" fg:x="84012"/></g><g><title>datafusion-cli`&lt;datafusion_common::scalar::ScalarValue as core::clone::Clone&gt;::clone (103 samples, 0.12%)</title><rect width=".121%" height="15" x="98.659%" y="309" fill="#E6AB14" fg:w="103" fg:x="84004"/></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.06%)</title><rect width=".063%" height="15" x="98.716%" y="293" fill="#D24729" fg:w="54" fg:x="84053"/></g><g><title>datafusion-cli`mi_malloc_aligned (18 samples, 0.02%)</title><rect width=".021%" height="15" x="98.783%" y="309" fill="#CEAD14" fg:w="18" fg:x="84110"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate::min_max::MaxAccumulator as datafusion_expr_common::accumulator::Accumulator&gt;::state (140 samples, 0.16%)</title><rect width=".164%" height="15" x="98.644%" y="325" fill="#E95822" fg:w="140" fg:x="83991"/></g><g><title>datafusion-cli`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.02%)</title><rect width=".015%" height="15" x="98.815%" y="325" fill="#DFD12E" fg:w="13" fg:x="84137"/></g><g><title>datafusion-cli`alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect width=".015%" height="15" x="98.815%" y="309" fill="#FA2B12" fg:w="13" fg:x="84137"/></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.01%)</title><rect width=".013%" height="15" x="98.817%" y="293" fill="#D00D0A" fg:w="11" fg:x="84139"/></g><g><title>datafusion-cli`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.02%)</title><rect width=".018%" height="15" x="98.844%" y="229" fill="#D4C824" fg:w="15" fg:x="84162"/></g><g><title>datafusion-cli`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect width=".016%" height="15" x="98.846%" y="213" fill="#E15A1E" fg:w="14" fg:x="84163"/></g><g><title>datafusion-cli`arrow_buffer::buffer::mutable::MutableBuffer::reallocate (54 samples, 0.06%)</title><rect width=".063%" height="15" x="98.865%" y="229" fill="#ECB627" fg:w="54" fg:x="84180"/></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.06%)</title><rect width=".058%" height="15" x="98.871%" y="213" fill="#D49023" fg:w="49" fg:x="84185"/></g><g><title>datafusion-cli`&lt;arrow_array::array::byte_array::GenericByteArray&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;Ptr&gt;&gt;&gt;::from_iter (87 samples, 0.10%)</title><rect width=".102%" height="15" x="98.83%" y="245" fill="#E43F2C" fg:w="87" fg:x="84150"/></g><g><title>datafusion-cli`mi_free (9 samples, 0.01%)</title><rect width=".011%" height="15" x="98.936%" y="245" fill="#E46D06" fg:w="9" fg:x="84240"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (202 samples, 0.24%)</title><rect width=".237%" height="15" x="98.83%" y="325" fill="#EE7518" fg:w="202" fg:x="84150"/></g><g><title>datafusion-cli`alloc::vec::in_place_collect::from_iter_in_place (202 samples, 0.24%)</title><rect width=".237%" height="15" x="98.83%" y="309" fill="#F21A1A" fg:w="202" fg:x="84150"/></g><g><title>datafusion-cli`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (202 samples, 0.24%)</title><rect width=".237%" height="15" x="98.83%" y="293" fill="#DD5C30" fg:w="202" fg:x="84150"/></g><g><title>datafusion-cli`datafusion_common::scalar::ScalarValue::iter_to_array (202 samples, 0.24%)</title><rect width=".237%" height="15" x="98.83%" y="277" fill="#D1D120" fg:w="202" fg:x="84150"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (202 samples, 0.24%)</title><rect width=".237%" height="15" x="98.83%" y="261" fill="#DD4616" fg:w="202" fg:x="84150"/></g><g><title>libsystem_platform.dylib`_platform_memmove (103 samples, 0.12%)</title><rect width=".121%" height="15" x="98.947%" y="245" fill="#F89105" fg:w="103" fg:x="84249"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_common::scalar::ScalarValue&gt; (10 samples, 0.01%)</title><rect width=".012%" height="15" x="99.082%" y="309" fill="#E2741A" fg:w="10" fg:x="84364"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::AccumulatorState&gt; (21 samples, 0.02%)</title><rect width=".025%" height="15" x="99.073%" y="325" fill="#F40511" fg:w="21" fg:x="84357"/></g><g><title>datafusion-cli`mi_free (11 samples, 0.01%)</title><rect width=".013%" height="15" x="99.107%" y="325" fill="#FC9F21" fg:w="11" fg:x="84386"/></g><g><title>datafusion-cli`mi_free_block_delayed_mt (24 samples, 0.03%)</title><rect width=".028%" height="15" x="99.12%" y="325" fill="#CE4700" fg:w="24" fg:x="84397"/></g><g><title>datafusion-cli`mi_free_block_mt (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.148%" y="325" fill="#E97636" fg:w="9" fg:x="84421"/></g><g><title>datafusion-cli`&lt;datafusion_functions_aggregate_common::aggregate::groups_accumulator::GroupsAccumulatorAdapter as datafusion_expr_common::groups_accumulator::GroupsAccumulator&gt;::state (492 samples, 0.58%)</title><rect width=".578%" height="15" x="98.592%" y="341" fill="#EA5330" fg:w="492" fg:x="83947"/></g><g><title>datafusion-cli`mi_free_generic_mt (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.159%" y="325" fill="#E40336" fg:w="9" fg:x="84430"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;datafusion_common::scalar::ScalarValue&gt;]&gt; (12 samples, 0.01%)</title><rect width=".014%" height="15" x="99.174%" y="341" fill="#E29B0D" fg:w="12" fg:x="84443"/></g><g><title>datafusion-cli`mi_free (20 samples, 0.02%)</title><rect width=".024%" height="15" x="99.194%" y="341" fill="#F11C25" fg:w="20" fg:x="84460"/></g><g><title>datafusion-cli`datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream::set_input_done_and_produce_output (546 samples, 0.64%)</title><rect width=".641%" height="15" x="98.586%" y="373" fill="#E95D0A" fg:w="546" fg:x="83942"/></g><g><title>datafusion-cli`datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream::emit (546 samples, 0.64%)</title><rect width=".641%" height="15" x="98.586%" y="357" fill="#E17113" fg:w="546" fg:x="83942"/></g><g><title>datafusion-cli`mi_free (16 samples, 0.02%)</title><rect width=".019%" height="15" x="99.227%" y="373" fill="#F10212" fg:w="16" fg:x="84488"/></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.05%)</title><rect width=".051%" height="15" x="99.247%" y="373" fill="#E4CF15" fg:w="43" fg:x="84505"/></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream as futures_core::stream::Stream&gt;::poll_next (75,562 samples, 88.74%)</title><rect width="88.744%" height="15" x="10.561%" y="389" fill="#D5D323" fg:w="75562" fg:x="8992"/><text x="10.811%" y="399.5">datafusion-cli`&lt;datafusion_physical_plan::aggregates::row_hash::GroupedHashAggregateStream as futures_core::stream::Stream&gt;::poll_next</text></g><g><title>datafusion-cli`&lt;datafusion_physical_plan::repartition::distributor_channels::SendFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect width=".013%" height="15" x="99.305%" y="389" fill="#D1530A" fg:w="11" fg:x="84554"/></g><g><title>datafusion-cli`tokio::runtime::task::waker::wake_by_val (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.307%" y="373" fill="#D1A401" fg:w="9" fg:x="84556"/></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.307%" y="357" fill="#D5B82B" fg:w="9" fg:x="84556"/></g><g><title>datafusion-cli`tokio::runtime::context::with_scheduler (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.307%" y="341" fill="#E73D22" fg:w="9" fg:x="84556"/></g><g><title>datafusion-cli`mi_free_block_mt (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.319%" y="325" fill="#EB4B03" fg:w="9" fg:x="84566"/></g><g><title>datafusion-cli`_mi_os_reset (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.319%" y="309" fill="#DC6A2F" fg:w="9" fg:x="84566"/></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.01%)</title><rect width=".011%" height="15" x="99.319%" y="293" fill="#D2C421" fg:w="9" fg:x="84566"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (13 samples, 0.02%)</title><rect width=".015%" height="15" x="99.319%" y="389" fill="#E59A2A" fg:w="13" fg:x="84566"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.02%)</title><rect width=".015%" height="15" x="99.319%" y="373" fill="#E4721A" fg:w="13" fg:x="84566"/></g><g><title>datafusion-cli`core::ptr::drop_in_place&lt;arrow_array::array::byte_array::GenericByteArray&lt;arrow_array::types::GenericBinaryType&lt;i32&gt;&gt;&gt; (13 samples, 0.02%)</title><rect width=".015%" height="15" x="99.319%" y="357" fill="#D09001" fg:w="13" fg:x="84566"/></g><g><title>datafusion-cli`alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.02%)</title><rect width=".015%" height="15" x="99.319%" y="341" fill="#EF7025" fg:w="13" fg:x="84566"/></g><g><title>datafusion-cli`datafusion_physical_plan::repartition::BatchPartitioner::partition_iter (57 samples, 0.07%)</title><rect width=".067%" height="15" x="99.338%" y="389" fill="#D26032" fg:w="57" fg:x="84582"/></g><g><title>datafusion-cli`&lt;str as datafusion_common::hash_utils::HashValue&gt;::hash_one (49 samples, 0.06%)</title><rect width=".058%" height="15" x="99.347%" y="373" fill="#DEB202" fg:w="49" fg:x="84590"/></g><g><title>datafusion-cli`datafusion_physical_plan::repartition::RepartitionExec::pull_from_input::_{{closure}} (75,911 samples, 89.15%)</title><rect width="89.154%" height="15" x="10.253%" y="405" fill="#E24A12" fg:w="75911" fg:x="8730"/><text x="10.503%" y="415.5">datafusion-cli`datafusion_physical_plan::repartition::RepartitionExec::pull_from_input::_{{closure}}</text></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::Context::run (78,392 samples, 92.07%)</title><rect width="92.068%" height="15" x="7.34%" y="453" fill="#E14336" fg:w="78392" fg:x="6250"/><text x="7.59%" y="463.5">datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (78,358 samples, 92.03%)</title><rect width="92.028%" height="15" x="7.38%" y="437" fill="#FB5C20" fg:w="78358" fg:x="6284"/><text x="7.63%" y="447.5">datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>datafusion-cli`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (78,351 samples, 92.02%)</title><rect width="92.02%" height="15" x="7.388%" y="421" fill="#E49516" fg:w="78351" fg:x="6291"/><text x="7.638%" y="431.5">datafusion-cli`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>datafusion-cli`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (78,393 samples, 92.07%)</title><rect width="92.069%" height="15" x="7.34%" y="533" fill="#F3360D" fg:w="78393" fg:x="6250"/><text x="7.59%" y="543.5">datafusion-cli`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>datafusion-cli`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (78,393 samples, 92.07%)</title><rect width="92.069%" height="15" x="7.34%" y="517" fill="#F3B41C" fg:w="78393" fg:x="6250"/><text x="7.59%" y="527.5">datafusion-cli`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>datafusion-cli`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (78,393 samples, 92.07%)</title><rect width="92.069%" height="15" x="7.34%" y="501" fill="#D0A718" fg:w="78393" fg:x="6250"/><text x="7.59%" y="511.5">datafusion-cli`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::run (78,393 samples, 92.07%)</title><rect width="92.069%" height="15" x="7.34%" y="485" fill="#F5492D" fg:w="78393" fg:x="6250"/><text x="7.59%" y="495.5">datafusion-cli`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>datafusion-cli`tokio::runtime::context::runtime::enter_runtime (78,393 samples, 92.07%)</title><rect width="92.069%" height="15" x="7.34%" y="469" fill="#EDCB30" fg:w="78393" fg:x="6250"/><text x="7.59%" y="479.5">datafusion-cli`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>datafusion-cli`_mi_page_free (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="389" fill="#D3C510" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`mi_segment_page_clear (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="373" fill="#F36333" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`mi_segment_span_free_coalesce (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="357" fill="#D77B1D" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`mi_segment_span_free (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="341" fill="#EFBA25" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`mi_segment_try_purge (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="325" fill="#FC8827" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`mi_segment_purge (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="309" fill="#DFD520" fg:w="30" fg:x="84644"/></g><g><title>libsystem_kernel.dylib`madvise (30 samples, 0.04%)</title><rect width=".035%" height="15" x="99.41%" y="293" fill="#E97305" fg:w="30" fg:x="84644"/></g><g><title>datafusion-cli`_mi_free_delayed_block (31 samples, 0.04%)</title><rect width=".036%" height="15" x="99.41%" y="405" fill="#CFE22C" fg:w="31" fg:x="84644"/></g><g><title>datafusion-cli`mi_heap_malloc_zero_aligned_at_generic (35 samples, 0.04%)</title><rect width=".041%" height="15" x="99.41%" y="437" fill="#D07E00" fg:w="35" fg:x="84644"/></g><g><title>datafusion-cli`_mi_malloc_generic (35 samples, 0.04%)</title><rect width=".041%" height="15" x="99.41%" y="421" fill="#F44215" fg:w="35" fg:x="84644"/></g><g><title>datafusion-cli`core::iter::adapters::try_process (399 samples, 0.47%)</title><rect width=".469%" height="15" x="99.409%" y="501" fill="#DE610C" fg:w="399" fg:x="84643"/></g><g><title>datafusion-cli`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (399 samples, 0.47%)</title><rect width=".469%" height="15" x="99.409%" y="485" fill="#DBD513" fg:w="399" fg:x="84643"/></g><g><title>datafusion-cli`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (399 samples, 0.47%)</title><rect width=".469%" height="15" x="99.409%" y="469" fill="#FCA91E" fg:w="399" fg:x="84643"/></g><g><title>datafusion-cli`object_store::local::read_range (399 samples, 0.47%)</title><rect width=".469%" height="15" x="99.409%" y="453" fill="#CE2033" fg:w="399" fg:x="84643"/></g><g><title>datafusion-cli`std::io::default_read_to_end (363 samples, 0.43%)</title><rect width=".426%" height="15" x="99.451%" y="437" fill="#FAAC2A" fg:w="363" fg:x="84679"/></g><g><title>libsystem_kernel.dylib`read (363 samples, 0.43%)</title><rect width=".426%" height="15" x="99.451%" y="421" fill="#D1222B" fg:w="363" fg:x="84679"/></g><g><title>datafusion-cli`std::fs::OpenOptions::_open (47 samples, 0.06%)</title><rect width=".055%" height="15" x="99.884%" y="485" fill="#DF0B23" fg:w="47" fg:x="85047"/></g><g><title>datafusion-cli`std::sys::pal::unix::fs::File::open_c (47 samples, 0.06%)</title><rect width=".055%" height="15" x="99.884%" y="469" fill="#FBDB1A" fg:w="47" fg:x="85047"/></g><g><title>libsystem_kernel.dylib`__open (47 samples, 0.06%)</title><rect width=".055%" height="15" x="99.884%" y="453" fill="#E77703" fg:w="47" fg:x="85047"/></g><g><title>datafusion-cli`object_store::local::open_file (54 samples, 0.06%)</title><rect width=".063%" height="15" x="99.884%" y="501" fill="#D8610B" fg:w="54" fg:x="85047"/></g><g><title>datafusion-cli`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (470 samples, 0.55%)</title><rect width=".552%" height="15" x="99.409%" y="517" fill="#DF3B09" fg:w="470" fg:x="84643"/></g><g><title>datafusion-cli`object_store::local::read_range (12 samples, 0.01%)</title><rect width=".014%" height="15" x="99.947%" y="501" fill="#E95D1F" fg:w="12" fg:x="85101"/></g><g><title>datafusion-cli`tokio::runtime::blocking::pool::Inner::run (78,880 samples, 92.64%)</title><rect width="92.641%" height="15" x="7.329%" y="549" fill="#EF5121" fg:w="78880" fg:x="6240"/><text x="7.579%" y="559.5">datafusion-cli`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>datafusion-cli`tokio::runtime::task::raw::poll (477 samples, 0.56%)</title><rect width=".56%" height="15" x="99.409%" y="533" fill="#D57822" fg:w="477" fg:x="84643"/></g><g><title>datafusion-cli`std::sys::backtrace::__rust_begin_short_backtrace (78,881 samples, 92.64%)</title><rect width="92.642%" height="15" x="7.329%" y="565" fill="#F33135" fg:w="78881" fg:x="6240"/><text x="7.579%" y="575.5">datafusion-cli`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>datafusion-cli`std::sys::pal::unix::thread::Thread::new::thread_start (78,882 samples, 92.64%)</title><rect width="92.643%" height="15" x="7.329%" y="597" fill="#F7D821" fg:w="78882" fg:x="6240"/><text x="7.579%" y="607.5">datafusion-cli`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>datafusion-cli`core::ops::function::FnOnce::call_once{{vtable.shim}} (78,882 samples, 92.64%)</title><rect width="92.643%" height="15" x="7.329%" y="581" fill="#E21A0E" fg:w="78882" fg:x="6240"/><text x="7.579%" y="591.5">datafusion-cli`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>datafusion-cli`mi_heap_collect_ex (13 samples, 0.02%)</title><rect width=".015%" height="15" x="99.984%" y="549" fill="#D73135" fg:w="13" fg:x="85132"/></g><g><title>datafusion-cli`_mi_free_delayed_block (11 samples, 0.01%)</title><rect width=".013%" height="15" x="99.986%" y="533" fill="#F5A228" fg:w="11" fg:x="85134"/></g><g><title>all (85,146 samples, 100%)</title><rect width="100%" height="15" x="0%" y="645" fill="#E54411" fg:w="85146" fg:x="0"/></g><g><title>libsystem_pthread.dylib`thread_start (78,906 samples, 92.67%)</title><rect width="92.671%" height="15" x="7.329%" y="629" fill="#D5B60A" fg:w="78906" fg:x="6240"/><text x="7.579%" y="639.5">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (78,906 samples, 92.67%)</title><rect width="92.671%" height="15" x="7.329%" y="613" fill="#F57D1E" fg:w="78906" fg:x="6240"/><text x="7.579%" y="623.5">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_exit (22 samples, 0.03%)</title><rect width=".026%" height="15" x="99.974%" y="597" fill="#E8CA02" fg:w="22" fg:x="85124"/></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (14 samples, 0.02%)</title><rect width=".016%" height="15" x="99.984%" y="581" fill="#ED8C33" fg:w="14" fg:x="85132"/></g><g><title>datafusion-cli`_mi_thread_done (14 samples, 0.02%)</title><rect width=".016%" height="15" x="99.984%" y="565" fill="#EC9D19" fg:w="14" fg:x="85132"/></g></svg></svg>